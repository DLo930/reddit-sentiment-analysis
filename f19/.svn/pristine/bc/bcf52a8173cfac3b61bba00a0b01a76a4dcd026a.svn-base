%\clearpage
\Question{Code Revisions}

\begin{parts}
Here is a loop body that performs linear search. You can
use it as an implementation for lines~\ref{l:searchX:begin-loop}--\ref{l:searchX:end-loop} on page~\pageref{q:search2}:
\begin{lstlisting}[numbers=left,firstnumber=15,aboveskip=0pt,belowskip=0pt]
  {
    if (A[lo] == x)[*\label{l:searchX:ifeq}*]
      return lo;
    if (A[lo] > x)[*\label{l:searchX:ifgt}*]
      return -1;
    lo = lo + 1;[*\label{l:searchX:lo++}*]
  }
  //@assert lo == hi;
\end{lstlisting}
%\lstinputlisting[numbers=left,firstnumber=15,firstline=15,lastline=22,aboveskip=0pt,belowskip=0pt]{\code/search2.c0}

\part[1]\TAGS{loop-invariant}
For the loop invariants to hold for this loop body, they must be
preserved through each iteration.  Prove that the invariant on
line~\ref{l:searchX:LI1} on page~\pageref{q:search2} is preserved by
this loop body --- you may not need all the provided lines.

\enlargethispage{5ex}
\begin{framed}
\newcommand{\nlineA}[2]
 {\hspace*{-2em}%
  \makebox[2em][l]{\fontsize{1.5ex}{1.7ex}\selectfont #1}%
  \uanswer{20em}{#2} \hspace{1em} assumption}
\newcommand{\nline}[3]
 {\hspace*{-2em}%
  \makebox[2em][l]{\fontsize{1.5ex}{1.7ex}\selectfont #1}%
  \uanswer{20em}{#2} \hspace{1em} by \uanswer{10em}{#3}}

\medskip
\nlineA{A}{\lstinline'0 <= lo && lo <= hi && hi <= n'}\\[2ex]
\nline{B}{\lstinline'lo` = lo+1'}{line \ref{l:searchX:lo++}}\\[2ex]
\nline{C}{\lstinline'0 <= lo`'}{line \ref{l:searchX:LG}, A, B}\\[2ex]
\nline{D}{\lstinline'lo+1 <= hi'}{line \ref{l:searchX:LG}}\\[2ex]
\nline{E}{\lstinline'hi <= n'}{A}\\[1ex]
Therefore we conclude that\\[2.5ex]
\nline{}{\lstinline'0 <= lo` && lo` <= hi && hi <= n'}{C, D, E}
\end{framed}


\RUBRIC
Part (a)
TAGS: loop-invariant

+0.25pt lo' = lo+1 (line 20)
+0.25pt Justification that 0 <= lo' outside of conclusion (follows from loop invariant, loop guard and definition of lo')
+0.25pt lo+1 <= hi (line 11)
+0.25pt Justification that hi' <= n (follows from loop invariant and definition of hi' -- line 12)
-0.25pt Extraneous justifications
-0.25pt Missing or incorrect initial assumption

Commentary:
  When students put the correct initial assumption (that the loop invariant holds initially), and then used that fact without explicitly citing it again, we accepted the answer.
ENDRUBRIC

\newpage
\part[1]\TAGS{loop-invariant}
Prove that the invariant in line~\ref{l:searchX:LI2} is preserved by
this loop body --- you may not need all the provided lines. (The proof
for line~\ref{l:searchX:LI3} is not required for this answer.)

\begin{framed}
\newcommand{\nlineA}[2]
 {\hspace*{-2em}%
  \makebox[2em][l]{\fontsize{1.5ex}{1.7ex}\selectfont #1}%
  \uanswer{20em}{#2} \hspace{1em} assumption}
\newcommand{\nline}[3]
 {\hspace*{-2em}%
  \makebox[2em][l]{\fontsize{1.5ex}{1.7ex}\selectfont #1}%
  \uanswer{20em}{#2} \hspace{1em} by \uanswer{10em}{#3}}

\medskip
\nlineA{A}{\lstinline'gt_seg(x, A, 0, lo)'}\\[2.5ex]
\nline{B}{\lstinline'lo` = lo+1'}{line \ref{l:searchX:lo++}}\\[2.5ex]
\nline{C}{\lstinline'A[lo] < x'}{lines \ref{l:searchX:ifeq}, \ref{l:searchX:ifgt}}\\[2.5ex]
\nline{D}{\lstinline'gt_seg(x, A, 0, lo+1)'}{B, C}\\[2.5ex]
\nline{E}{}{}\\[2.5ex]
\nline{F}{}{}\\[1.5ex]
Therefore we conclude that\\[2.5ex]
\nline{}{\lstinline'gt_seg(x, A, 0, lo`)'}{D}
\end{framed}

\RUBRIC
Part (b)
TAGS: loop-invariant

Gradescope rubric:
+ 0.25 pts  Setup (either x > A[0..lo) by (line 13) OR the fact that
array entirely sorted (line 3, second precondition))
+ 0.25 pts  Key new fact learned by the loop (x > A[lo] -- line number justification optional)
+ 0.25 pts  Combines the facts to conclude that x > A[0..lo+1)
+ 0.25 pts  At some point, uses lo' = lo+1 (by line 20), which is necessary for establishing that x > A[0..lo+1) is what we need to show.
-0.25 pts  Missing justifications

Commentary:
. lo' = lo+1 (line 20)
. gt_seg(x, A, 0, lo) (line 13)
. A[lo] < x (line 20, or lines 16+18, or lines 16-19, be generous here.)
. gt_seg(x, A, 0, lo) /\ x > A[lo] => gt_seg(x, A, 0, lo')

ALTERNATE ANSWER:
. lo' = lo+1 (line 20)
. is_sorted(x, A, 0, n) (line 3)
. x > A[lo] (line 20, or lines 16+18, or lines 16-19, be generous here.)
. is_sorted(x, A, 0, n) /\ x > A[lo] => gt_seg(x, A, 0, lo')

 0.25 point for missing justification(s); aim for all or nothing otherwise
ENDRUBRIC

\part[0\half]\TAGS{loop-invariant}
You might have noticed in the previous part that \lstinline'hi' does
not actually change during the loop, even though all our reasoning
assumes it might.  So now, complete this simpler loop invariant for
the modified code by writing a line that tells you something about
\lstinline'hi'.  The resulting loop invariant should be simple, should
be true initially, should be preserved by any iteration of the loop,
and should allow you to prove the postcondition \emph{without} the
modifications you made in part~\ref{part:debugging-search:2:4} of the
previous question. (You don't have to write the proof.)

\begin{lstlisting}[frame=single,numbers=left,firstnumber=12,lineskip=3ex]
  //@loop_invariant 0 <= lo && lo <= hi;
  //@loop_invariant gt_seg(x, A, 0, lo);
  //@loop_invariant [*\uanswer{26em}{hi == n}*];
\end{lstlisting}

\RUBRIC
Part (c)
TAGS: loop-invariant

Gradescope rubric:
+ 0.5 pt Correct [e.g. hi == n OR lt_seg(x, A, hi, n) OR !is_in(x, A, hi, n)]

Commentary:
. 1pt: hi == n
. 1pt: lt_seg(x, A, hi, n)
. 1pt: !is_in(x, A, hi, n)

  General guide to grading other solutions:
  Half a point deduction: something correct || something else
  Full point deduction: something correct && something else
ENDRUBRIC

\input{alt-body} % Not in S16

\end{parts}