Write an implementation for \lstinline'image_new'. Include any necessary
preconditions and postconditions for the implementation.
\begin{framed}
\ifprintanswers
\begin{lstlisting}[basicstyle=\basicstyle\color{\answerColor}]
image_t image_new(int w, int height)
//@requires 0 < w && 0 < h && w <= int_max() / h;
//@ensures is_image(\result)
{
    image_t IMG = alloc(image);
    IMG->width = w;
    IMG->height = h;
    IMG->data = alloc_array(pixel_t, w*h);
    return IMG;
}
\end{lstlisting}
\else~\vspace{3.5in}\fi
\end{framed}

\RUBRIC
Part (b -- image_new)
TAGS: array, correctness, pointer, safety, struct

Gradescope rubric:
+0.5pts calls alloc(image) or alloc(struct image_header) as well as alloc_array(pixel_t, width * height)
+0.5pts Initializes fields and returns the image
+0.5pts Postcondition is is_image(\result)

Commentary:
. image_t image_new(int w, int height)
  //@requires 0 < w && 0 < h && w <= int_max() / h;
  //@ensures is_image(\result)
  {
      image_t IMG = alloc(image);
      IMG->width = w;
      IMG->height = h;
      IMG->data = alloc_array(pixel_t, w*h);
      return IMG;
  }
. 1/2 point calling alloc(image) or alloc(struct image_header) and for
  calling alloc_array(pixel_t, w*h) somewhere
. 1/2 point initializing AND returning the image
. 1/4 point postcondition
   *** \result != NULL is okay as an ADDITIONAL check, but mark it redundant
. Don't worry about preconditions, we alreay took off for that in part (a)
ENDRUBRIC
