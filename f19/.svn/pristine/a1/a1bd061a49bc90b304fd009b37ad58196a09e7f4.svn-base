// Contract exploit: missing LR                                                 

pixel[] reflect(pixel[] pixels, int width, int height) 
//@requires is_valid_imagesize(width, height);
//@requires is_valid_imagesize(2*width, 2*height);
//@requires \length(pixels) == height * width;
//@ensures \length(\result) == (2*height) * (2*width);
{
  pixel[] res = alloc_array(pixel, height * width * 4);
  for (int r = 0; r < height; r++)
  {
    for (int c = 0; c < width; c++)
    {
      pixel p = pixels[get_index(r,c,width,height)];

      //@assert 0 <= width - 1 - c && width - 1 - c < width;
      //@assert 0 <= r && r < height;
      res[get_index(r, width - 1 - c, 2*width, 2*height)] = p;

      //@assert width <= width + c && width + c < 2*width;
      //@assert 0 <= r && r < height;
      res[get_index(r, width + c, 2*width, 2*height)] = p;

      //@assert 0 <= width - 1 - c && width - 1 -c < width;
      //@assert height <= 2*height - 1 - r && 2*height - 1 - r < 2*height;
      res[get_index(2 * height - 1 - r, width - 1 - c, 2*width, 2*height)] = p;

    }
  }
  return res;
}

