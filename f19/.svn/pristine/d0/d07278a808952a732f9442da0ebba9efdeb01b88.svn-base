#use <args>
#use <conio>
#use <util>

/* Cons-pointer. */
sortedlist* cp(int i, sortedlist* S) 
//@requires S != NULL;
{
  list* l = alloc(list);
  l->data = i;
  l->next = S->start;
  S->start = l;
  return S;
}

/* Duplicate-pointer. */
sortedlist* dp(sortedlist* S) 
//@requires S != NULL;
{
  sortedlist* Q = alloc(sortedlist);
  Q->start = S->start;
  return Q;
}

/* Cons-check. */
sortedlist* ck(sortedlist* S, int i) {
  if (S == NULL) return NULL;
  if (S->start == NULL) return NULL;
  if (S->start->data != i) return NULL;
  S->start = S->start->next;
  return S;
}

/* Nil-check. */
sortedlist* nk(sortedlist* S) {
  if (S == NULL) return NULL;
  if (S->start != NULL) return NULL;
  return S;
}

int main() {
  sortedlist* S;
  sortedlist* E = alloc(sortedlist);
  
  /* Insertion into empty list */
  S = dp(E); insert(S, int_min()); if (nk(ck(S, int_min())) == NULL) return 1;
  S = dp(E); insert(S, -12      ); if (nk(ck(S, -12)) == NULL) return 1;
  S = dp(E); insert(S, -1       ); if (nk(ck(S, -1)) == NULL) return 1;
  S = dp(E); insert(S, 0        ); if (nk(ck(S, 0)) == NULL) return 1;
  S = dp(E); insert(S, 1        ); if (nk(ck(S, 1)) == NULL) return 1;
  S = dp(E); insert(S, 122      ); if (nk(ck(S, 122)) == NULL) return 1;
  S = dp(E); insert(S, int_max()); if (nk(ck(S, int_max())) == NULL) return 1;
 
  /* Insertion into singleton list */
  S = cp(int_min(), dp(E)); insert(S, int_min()); 
  if (nk(ck(S, int_min())) == NULL) return 1;
  println("A");

  S = cp(int_min(), dp(E)); insert(S, 0); 
  if (nk(ck(ck(S, int_min()), 0)) == NULL) return 1;
  println("B");

  S = cp(int_min(), dp(E)); insert(S, int_max()); 
  if (nk(ck(ck(S, int_min()), int_max())) == NULL) return 1;
  println("C");

  S = cp(-12,       dp(E)); insert(S, int_min()); 
  if (nk(ck(ck(S, int_min()), -12)) == NULL) return 1;
  println("D");

  S = cp(-12,       dp(E)); insert(S, 0); 
  if (nk(ck(ck(S, -12), 0)) == NULL) return 1;
  println("E");

  S = cp(-12,       dp(E)); insert(S, int_max()); 
  if (nk(ck(ck(S, -12), int_max())) == NULL) return 1;
  println("F");

  return 0;
}