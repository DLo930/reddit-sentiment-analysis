#use <args>
#use <conio>
#use <file>
#use <string>

int main() {
  args_t args = args_parse();
  if (args->argc != 1) error("Wrong number of args");
  string arg = args->argv[0];

  if (string_equal(arg, "10x10-no-aliasing")) {
    pixel_t[] A = alloc_array(pixel_t, 100);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    for (int i = 0; i < 100; i++) A[i] = 0xFFFFFFFF;
    pixel_t[] B = apply_mask(A, 10, 10, mask, 3);
    if (A == B) return 1;

  } else if (string_equal(arg, "1x1")) {
    pixel_t[] A = alloc_array(pixel_t, 1);
    A[0] = 0xFF0F0F0F;

    pixel_t[] mask = alloc_array(pixel_t, 1);

    int[] B = apply_mask(A,1,1,mask,1);
    if (!(B[0] == 0)) return 1;

    mask[0] = 3;
    B = apply_mask(A,1,1,mask,1);
    if (!(B[0] == 45)) return 1;

    mask[0] = -10;
    B = apply_mask(A,1,1,mask,1);
    if (!(B[0] == -150)) return 1;

  } else if (string_equal(arg, "3x3")) {
    pixel_t[] A = alloc_array(pixel_t, 9);
    A[0] = 0x00010300;
    A[1] = 0xFF221100;
    A[2] = 0xFF222222;
    A[3] = 0x00443322;
    A[4] = 0xFF008844;
    A[5] = 0x55555555;
    A[6] = 0xFF666666;
    A[7] = 0x00777777;
    A[8] = 0xFF888888;

    int[] mask = alloc_array(int, 9);
    mask[0] = -1;

    int[] B = apply_mask(A,3,3,mask,3);
    //@assert \length(B) == 9;

    if (!(B[0] == 0)) return 1;
    if (!(B[1] == 0)) return 1;
    if (!(B[2] == 0)) return 1;
    if (!(B[3] == 0)) return 1;
    if (!(B[4] == -0x01)) return 1;
    if (!(B[5] == -0x11)) return 1;
    if (!(B[6] == 0)) return 1;
    if (!(B[7] == -0x33)) return 1;
    if (!(B[8] == -0x44)) return 1;

  } else if (string_equal(arg, "size-lies1")) {
    pixel_t[] A = alloc_array(pixel_t, 50);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    for (int i = 0; i < 50; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 10, 10, mask, 3);
  } else if (string_equal(arg, "size-lies2")) {
    pixel_t[] A = alloc_array(pixel_t, 50);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    for (int i = 0; i < 50; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 5, 5, mask, 3);
  } else if (string_equal(arg, "size-lies3")) {
    pixel_t[] A = alloc_array(pixel_t, 50);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    for (int i = 0; i < 50; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 5, 10, mask, 9);

  } else if (string_equal(arg, "size-toosmall1")) {
    pixel_t[] A = alloc_array(pixel_t, 0);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    apply_mask(A, 0, 5, mask, 3);
  } else if (string_equal(arg, "size-toosmall2")) {
    pixel_t[] A = alloc_array(pixel_t, 0);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    apply_mask(A, 5, 0, mask, 3);
  } else if (string_equal(arg, "size-toosmall3")) {
    pixel_t[] A = alloc_array(pixel_t, 25);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    apply_mask(A, 5, 5, mask, -1);
  } else if (string_equal(arg, "size-invalid")) {
    pixel_t[] A = alloc_array(pixel_t, 8287);
    pixel_t[] mask = alloc_array(pixel_t, 9);
    for (int i = 0; i < 8287; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 1147445003, 419965, mask, 3);
  } else if (string_equal(arg, "size-evenmask")) {
    pixel_t[] A = alloc_array(pixel_t, 8287);
    pixel_t[] mask = alloc_array(pixel_t, 4);
    for (int i = 0; i < 8287; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 1147445003, 419965, mask, 2);

  } else if (string_equal(arg, "size-invalidmask")) {
    pixel_t[] A = alloc_array(pixel_t, 25);
    pixel_t[] mask = alloc_array(pixel_t, 4097);
    for (int i = 0; i < 25; i++) A[i] = 0xFFFFFFFF;
    apply_mask(A, 5, 5, mask, 2095103);

  } else {
    error("Bad argument");
  }


  return 0;
}
