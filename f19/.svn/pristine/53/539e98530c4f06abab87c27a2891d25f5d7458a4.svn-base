\section*{Simplest, tightest bounds%
\TAGS{big-o}}

Something that will come up often with big-O is the idea of a
\emph{tight} bound on the runtime of a function.

It's technically correct to say that binary search, which takes around
$\log n$ steps on an array of length $n$, is $O(n!)$, since $\log n >
n!$ for all $n > 0$ but it's not very useful.  If we ask for a
\emph{tight} bound, we want the closest bound you can give. For binary
search, $O(\log n)$ is a tight bound because no function that grows
more slowly than $\log n$ provides a correct upper bound for binary
search.

{\Large\bf Unless we specify otherwise, we want the simplest, tightest
  bound!}
