#use <conio>
#use <string>
#use <args>
#use <parse>
#use <img>

void rotate_main(string input, string output)
{
  print("Input image:  ");
  println(input);
  print("Output image: ");
  println(output);

  /* Load source image */
  image_t source = image_load(input);
  if (source == NULL) error("Could not load source image");
  int width = image_width(source);
  int height = image_height(source);
  pixel_t[] inpixels = image_data(source);

  print("Loaded image.  Dimensions are ");
  printint(width);
  print(" by ");
  printint(height);
  println(".");
  if (width != height) error("Image not square");

  /* Run transformation */
  print("Running rotation transform...");
  flush();
  pixel_t[] resultpixels = rotate(inpixels, width, height);
  println("done.");
  //@assert \length(resultpixels) == (width * 2) * (height * 2);

  /* Create destination image (twice the area of original image) */
  image_t dest = image_create(2*width, 2*height);
  pixel_t[] outpixels = image_data(dest);
  for (int i = 0; i < 4*width*height; i++)
    //@loop_invariant 0 <= i;
    {
      outpixels[i] = resultpixels[i];
    }

  /* Save result */
  print("Saving output..."); flush();
  image_save(dest, output);
  println("done.");
}

string default_output(string input, string name) {
  int len = string_length(input);
  if (!(len > 4 && string_equal(".png", string_sub(input, len-4, len)))) {
    error("Input file does not end with .png");
  }

  string res = string_sub(input, 0, len-4);
  res = string_join(res, "_");
  res = string_join(res, name);
  res = string_join(res, ".png");

  return res;
}

int main() {
  string *output = alloc(string);
  string *input = alloc(string);

  args_string("-o", output);
  args_string("-i", input);
  args_parse();

  if (string_equal("", *input)) {
    error("Usage: rotate -i <input image> [-o <output image>]");
  }

  if (string_equal("", *output)) {
    *output = default_output(*input, "rotate");
  }

  rotate_main(*input, *output);

  return 0;
}
