\bgroup
\newcommand{\ans}[1]{\uanswer{25em}{#1\hfill}}
\newcommand{\n}{\textbackslash{n}}
\part[2]\TAGS{c0vm}
\label{f_bytecode}
(Note that the bytecode continues on the following page.)
\begin{lstlisting}[language=C0VM, basicstyle=\smallbasicstyle]
C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 15             # string pool total size
# string pool
48 61 70 70 79 20 54 68 61 6E 6B 73 67 69 76 69 6E 67 21 0A 00

00 02             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 03             # number of local variables = 3
00 0F             # code length = 15 bytes
14 00 00 # aldc 0          # [*\ans{s[0] = "Happy Thanksgiving!\n"}*]
B7 00 00 # invokenative 0  # [*\ans{print("Happy Thanksgiving!\n")}*]
57       # pop             # (ignore result)
10 00    # bipush 0        # [*\ans{0}*]
10 0A    # bipush 10       # [*\ans{10}*]
B8 00 01 # invokestatic 1  # [*\ans{f(0, 10)}*]
B0       # return          #

#<f>
00 02             # number of arguments = 2
00 03             # number of local variables = 3
00 23             # code length = 35 bytes
15 01    # vload 1         # [*\ans{i}*]
10 00    # bipush 0        # [*\ans{0}*]
9F 00 06 # if_cmpeq +6     # [*\ans{if (i == 0) goto {\tiny\ref{l:c0vm-thx-00:then}}}*]
A7 00 0A # goto +10        # [*\ans{goto {\tiny\ref{l:c0vm-thx-01:else}}}*]
15 00    # vload 0         # [*\ans{sum}*][*\label{l:c0vm-thx-00:then}*]
36 02    # vstore 2        # [*\ans{result = sum;}*]
A7 00 12 # goto +18        # [*\ans{goto {\tiny\ref{l:c0vm-thx-02:endif}}}*]
15 00    # vload 0         # [*\ans{sum}*][*\label{l:c0vm-thx-01:else}*]
15 01    # vload 1         # [*\ans{i}*]
60       # iadd            # [*\ans{(sum + i)}*]
15 01    # vload 1         # [*\ans{i}*]
10 01    # bipush 1        # [*\ans{1}*]
64       # isub            # [*\ans{(i - 1}*]
B8 00 01 # invokestatic 1  # [*\ans{f((sum + i), (i - 1))}*]
36 02    # vstore 2        # [*\ans{result = f((sum + i), (i - 1));}*]
15 02    # vload 2         # [*\ans{result}*][*\label{l:c0vm-thx-02:endif}*]
B0       # return          #

00 01             # native count
# native pool
00 01 00 10       # print
\end{lstlisting}
\begin{framed}
\ifprintanswers
\begin{lstlisting}[basicstyle=\basicstyle\color{\answerColor}]
#use <conio>

int f(int sum, int i) {
   int result;
   if (i == 0) result = sum;
   else result = f(sum+i, i-1);
   return result;
}

int main() {
   print("Happy Thanksgiving!\n");
   return f(0, 10);
 }
\end{lstlisting}
\else~\vspace{7.5in}\fi
\end{framed}

\RUBRIC
Part (b)
TAGS: c0vm

Gradescope rubric:
-0 pt WARNING: NEGATIVE GRADING
-0.25pt main: incorrect string
-0.25pt main: incorrect print statement
-0.5pt main: incorrect call to function f
-0.25pt f: incorrect If statement
-0.25pt f: incorrect recursive call
-0.25pt f: incorrect body in rest of if/else
-0.5pt altogether: doesn't match structure of byte code in other ways

Commentary:
- If student writes equivalent program but in reduced/simplified form,
  give half credit.
- No points off for omitting the #use.

#use <conio>

int f(int sum, int i) {
   int result;
   if (i == 0) result = sum;
   else result = f(sum+i, i-1);
   return result;
}

int main() {
   print("Happy Thanksgiving!\n");
   return f(0, 10);
}
ENDRUBRIC
\egroup

\newpage
\part[1]\TAGS{c0vm}
This question has to do with the function \lstinline'f' in the bytecode
given in part~(\ref{f_bytecode}) above.

When execution reaches the instruction on line 39,
there are two values on the operand stack; assume they are
\lstinline'0x0000000A' and \lstinline'0x00000009'. (It will be helpful to be
aware of where these values came from.)

Write the four operand stack states after each of lines 39--42 is
executed. The elements in your stack should be 32-bit hexadecimal
numbers. The top of your stack should be on the right-hand
side.  You may not need all the provided spaces

\begin{framed}
\newcommand{\ans}[1]{\uanswer{8em}{\tt #1}}

Immediately after executing line 39: \lstinline[language=opsem]'iadd'

\bigskip
\ans{0x00000013}, \ans{}, \ans{}, \ans{}

\bigskip
\bigskip
Immediately after executing line 40: \lstinline[language=opsem]'vload 1'

\bigskip
\ans{0x00000013}, \ans{0x00000009}, \ans{0x00000001}, \ans{}

\bigskip
\bigskip
Immediately after executing line 41: \lstinline[language=opsem]'bipush 1'

\bigskip
\ans{0x00000013}, \ans{0x00000009}, \ans{}, \ans{}

\bigskip
\bigskip
Immediately after executing line 42: \lstinline[language=opsem]'isub'

\bigskip
\ans{0x00000013}, \ans{0x00000008}, \ans{}, \ans{}

\bigskip
\bigskip

\end{framed}

\RUBRIC
Part (c)
TAGS: c0vm

Gradescope rubric:
+0.25pt Line 39:  0x00000013
+0.25pt Line 40:  0x00000013 0x00000009
+0.25pt Line 41:  0x00000013 0x00000009 0x00000001
+0.25pt Line 42:  0x00000013 0x00000008

Commentary:
  1/8 pt for each answer overall rounded to the next 1/4, all or nothing
    line 10: 0x00000013
    line 11: 0x00000009
    line 12: 0x00000009 0x00000001
    line 13: 0x00000008
ENDRUBRIC
