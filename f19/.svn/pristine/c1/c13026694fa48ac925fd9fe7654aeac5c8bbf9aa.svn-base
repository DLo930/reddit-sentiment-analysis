\newcommand{\isDiderot}{true}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% BEGIN: Diderot Specific
%% No need to edit.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% For pdf/latex we only use hyperref[label][reference text]
%% format.
\renewcommand{\href}[2]{
\hyperref[#1]{#2}
}

% htmlmath
% This is purely for MTL to delegate
% handling of alignat to mathjax. Otherwise
% pandoc tries to handle it and breaks it.
\def\targethtml{}
\newcommand{\htmlmath}[1]
{
\ifdefined\targethtml
\[
{#1}
\]
\else
{#1}
\fi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% END: Diderot Specific
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% BEGIN: PERVASIVE MACROS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Pervasives
\newcommand{\defn}[1]{\textbf{\emph{#1}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% END: PERVASIVES MACROS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% BEGIN: PREAMBLE 15122
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% BEGIN: edition.sty
%% Change these values to match the current offering
\newcommand{\YEAR}{2019}
\newcommand{\SEASON}{Summer}

\newcommand{\gradescope}{https://gradescope.com/courses/33581}
\newcommand{\gradescopeEntryCode}{M3PWPJ}

\newcommand{\autolabURL}{https://autolab.andrew.cmu.edu}
\newcommand{\autolab}{\href{\autolabURL/courses/15122-s19/}{Autolab}}

\newcommand{\piazzaURL}{https://piazza.com/cmu/spring2019/15122}
\newcommand{\piazza}{\href{\piazzaURL}{Piazza}}

\newcommand{\whereisthetgz}[1]{\url{ http://cs.cmu.edu/~15122/hw/#1}}

%% What follows is semester-independent -- no need to touch it
\newcommand{\courseNumber}{15-122}
\newcommand{\courseName}{Principles of Imperative Computation}
\newcommand{\semester}{\SEASON{} \YEAR}
\newcommand{\COPYRIGHT}{\copyright \ Carnegie Mellon University \YEAR}
\newcommand{\writtenDueTime}{9pm}
\newcommand{\progDueTime}{9pm}
%% END: edition.sty


%% BEGIN: lectures.sty
% begin palatino.sty
% copied from palatino.sty, except left ttdefault as CMTT
\renewcommand{\rmdefault}{ppl}
\renewcommand{\sfdefault}{phv}
% \renewcommand{\ttdefault}{pcr}
% end palatino.sty


%% BEGIN: OUT FOR DIDEROT
%% \usepackage{amsmath,amsthm,amssymb}
%% \usepackage{enumerate}
%% \usepackage{etoolbox}
%% \usepackage{graphicx}
%% \usepackage{comment}
%% \usepackage{import}  % Like input, but respects subdirectories

%% \usepackage[breaklinks=true,
%%   colorlinks=true,
%%   citecolor=blue,
%%   linkcolor=blue,
%%   urlcolor=blue]{hyperref}

%% \usepackage{fancyhdr}
%% \pagestyle{fancyplain}
%% \setlength{\headheight}{14pt}
%% \addtolength{\oddsidemargin}{30pt}
%% \addtolength{\evensidemargin}{-22pt}

%% \lhead[\fancyplain{}{\bfseries \thepage}]%
%%       {\fancyplain{}{\bfseries Lecture \lecnum: \lectitle}}
%% \chead[]{}
%% \rhead[\fancyplain{}{\bfseries L\lecnum: \lectitle}]%
%%       {\fancyplain{}{\bfseries \thepage}}
%% %\lfoot[{\small\scshape Lecture Notes}]{{\small\scshape Lecture Notes}}
%% \lfoot{\fancyplain{\small\scshape Lecture Notes}}
%% \cfoot[]{}
%% %\rfoot[{\small\scshape\lecdate}]{{\small\scshape\lecdate}}
%% \rfoot{\fancyplain{\COPYRIGHT}{}}


%% \newcommand{\LECNUM}
%%   {\ifnumless{\lecnum}{10}{0\lecnum}{\lecnum}}


%% \title{Lecture \lecnum\\ \lectitle}
%% \author{\courseNumber: \courseName{} (\semester)\\ \lecturer}
%% \@ifundefined{lecdate}
%%   {\date{\lecdate}}
%%   {}

%% % Directories containing code and pictures
%% \newcommand{\code}{code}
%% \newcommand{\img}{img}

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% % Environments
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% \newtheorem{exercise}{Exercise}
%% \newtheorem{theorem}{Theorem}
%% \newtheorem{lemma}[theorem]{Lemma}
%% \newtheorem{definition}[theorem]{Definition}

%% \newenvironment{Exercise}[1]
%% {\begin{exercise}[sample solution on page~\pageref{#1-solved}]%
%%     \label{#1}}
%% {\end{exercise}\vspace{-0.5ex}}

%% \newenvironment{Solution}[1]
%% {\par\noindent
%%   \textbf{Solution of exercise~\ref{#1}.}~\bgroup\itshape
%%   \label{#1-solved}%
%% }
%% {\egroup\par\bigskip}

%% \renewenvironment{proof}{\trivlist \item[\hskip \labelsep{\bf
%% Proof:}]}{\hfill$\Box$ \endtrivlist}
%% \newenvironment{attempt}{\trivlist \item[\hskip \labelsep{\bf
%% Proof attempt:}]}{\hfill$\Diamond$ \endtrivlist}

%% \newcommand{\ednote}[1]{\footnote{\it #1}\message{ednote!}}
%% \newenvironment{note}{\begin{quote}\message{note!}\it}{\end{quote}}
%% \newcommand{\highlight}[1]{\par%\vspace{1ex}%
%% \framebox{\addtolength{\linewidth}{-1em}\begin{minipage}{\linewidth}#1\end{minipage}}}
%% %\vspace{1ex}


%% Displays tags in 'answer' mode
%\newcommand{\TAGS}[2][0ex]{}
\newcommand{\TAGS}[1]{}
\newcommand{\exerciseTAGS}[1]{}
\newcommand{\chapterTAGS}[1]{}

%% BEGIN: inline ../../c0.sty
%%% listings style for c0
%\usepackage[table,usenames,dvipsnames]{xcolor}
%\usepackage[T1]{fontenc}
%\usepackage[scaled]{beramono}
%\usepackage{listings}


%% Some basic commands
\newcommand{\color}[1]{\textcolor{#1}}
\newcommand{\boldmath}[1]{\mathbf{#1}}

\newcommand{\basicColor}{black}
\newcommand{\numberColor}{black}
\newcommand{\commentColor}{MidnightBlue}
\newcommand{\stringColor}{OliveGreen}
\newcommand{\contractColor}{Mahogany}

\newcommand{\codefont}{fvm}  % Font to use for code
\newcommand{\basicstyle}{\normalsize\fontfamily{\codefont}\selectfont}
\newcommand{\smallbasicstyle}{\small\fontfamily{\codefont}\selectfont}
\newcommand{\smallerbasicstyle}{\footnotesize\fontfamily{\codefont}\selectfont}

\newcommand{\numberstyle}[1]{\color{\numberColor}{\tiny #1}}
\newcommand{\commentstyle}[1]{\color{\commentColor}{#1}}
\newcommand{\stringstyle}[1]{\color{\stringColor}{#1}}
\newcommand{\contractstyle}[1]{\color{\contractColor}{#1}}
\newcommand{\assertstyle}[1]{\contractstyle{//\textbf{@assert}{#1}}} % does not work
%% \lstdefinelanguage[C0]{C}[ANSI]{C}{%
%%   numbers=none, numberstyle=\numberstyle,               % Line numbers
%%   stepnumber=1, numbersep=5pt,                          % Line numbers
%%   showspaces=false, showstringspaces=false,             % Spaces
%%   tabsize=4,                                            % Tabs
%%   breaklines=false, breakatwhitespace=false,            % Line breaks
%%   basicstyle=\basicstyle,                               % Code style
%%   commentstyle=\commentstyle,                           % Comment style
%%   stringstyle=\stringstyle,                             % String style
%%   columns=fixed,                                        % Column alignment
%%   mathescape=true, escapeinside={[*}{*]},               % escapes for $...$
%%   morekeywords={alloc, alloc_array, bool, string},      % C0 keywords
%%   morekeywords={assert, error},                         % C0 keywords
%%   %deletekeywords={union},                               % kw in C but not C0
%%   morekeywords=[2]{requires, ensures},                  % C0 @keywords
%%   morekeywords=[2]{loop_invariant, assert},             % C0 @keywords
%%   keywordstyle=[2]{\bfseries\contractstyle},
%%   moredelim=**[s][\contractstyle]{//@}{;},              % C0 assertions
%%   moredelim=**[s][\contractstyle]{/*@}{@*/},            % C0 assertions
%%   moredelim=**[s][\contractstyle]{//@assert\ }{;},      % C0 @assert
%%   moredelim=**[s][\contractstyle]{/*@assert\ }{@*/},    % C0 @assert
%% %  morekeywords=[3]{result, length, hastag},
%% %  keywordstyle=[3]{\itshape\contractstyle}
%% }


%%% listings style for coin
\newcommand{\shellstyle}{\bfseries\color{Black}}
\newcommand{\coinheaderstyle}{\color{Gray}}
\newcommand{\coininputstyle}{\color{Blue}}
\newcommand{\coinerrorstyle}{\color{Red}}

%% \lstdefinelanguage[coin]{C}[C0]{C}{%
%%   numbers=none,
%%   moredelim=[l][\shellstyle]{\%},
%%   moredelim=[l][\coinheaderstyle]{C0\ interpreter},
%%   moredelim=[l][\coinheaderstyle]{Type\ },
%%   moredelim=**[l][\coininputstyle]{-->},
%%   moredelim=**[l][\coininputstyle]{...},
%%   moredelim=[l][\coinerrorstyle]{error:},
%%   moredelim=[l][\coinerrorstyle]{Error:},
%%   moredelim=[l][\coinerrorstyle]{Abort\ trap:},
%%   moredelim=[l][\coinerrorstyle]{\ @},
%% }


%%% listings style for C0VM
\newcommand{\instructionColor}{Mahogany}

\newcommand{\poolstyle}[1]{\bfseries\commentstyle{#1}}
\newcommand{\functionstyle}[1]{\itshape\commentstyle{#1}}
\newcommand{\instructionstyle}[1]{\color{\instructionColor}{#1}}

%% \lstdefinelanguage{C0VM}{%
%%   numbers=left, numberstyle=\tiny, stepnumber=1, numbersep=5pt,   % Line numbers
%%   showspaces=false, showstringspaces=false,                       % Spaces
%%   tabsize=4,                                                      % Tabs
%%   breaklines=false, breakatwhitespace=false,                      % Line breaks
%%   basicstyle=\basicstyle,                                         % Code style
%%   morecomment=[l]{\#},
%%   commentstyle=\commentstyle,                                     % Comment style
%%   stringstyle=\stringstyle,                                       % String style
%%   columns=fixed,                                                  % Column alignment
%%   mathescape=true, escapeinside={[*}{*]},                         % escapes for $...$
%%   keywordstyle=[2]{\bfseries\contractstyle},
%% % Sections and related info
%%   moredelim=*[l][\poolstyle]{\#\ version},
%%   moredelim=*[l][\poolstyle]{\#\ int\ pool},
%%   moredelim=*[l][\poolstyle]{\#\ string\ pool},
%%   moredelim=*[l][\poolstyle]{\#\ function\ pool},
%%   moredelim=*[l][\poolstyle]{\#\ function\_pool},
%%   moredelim=*[l][\poolstyle]{\#\ function\ count},
%%   moredelim=*[l][\poolstyle]{\#\ number\ of},
%%   moredelim=*[l][\poolstyle]{\#\ code\ length},
%%   moredelim=*[l][\poolstyle]{\#\ native\ pool},
%%   moredelim=*[l][\poolstyle]{\#\ native\ count},
%% % Goto addresses
%%   moredelim=*[s][\functionstyle]{\#<}{>},
%% % C0VM instructions
%%   moredelim=*[l][\instructionstyle]{\#\ dup},           % Stack operations
%%   moredelim=*[l][\instructionstyle]{\#\ pop},
%%   moredelim=*[l][\instructionstyle]{\#\ swap},
%%   moredelim=*[l][\instructionstyle]{\#\ iadd},          % Arithmetic
%%   moredelim=*[l][\instructionstyle]{\#\ iand},
%%   moredelim=*[l][\instructionstyle]{\#\ idiv},
%%   moredelim=*[l][\instructionstyle]{\#\ imul},
%%   moredelim=*[l][\instructionstyle]{\#\ ior},
%%   moredelim=*[l][\instructionstyle]{\#\ irem},
%%   moredelim=*[l][\instructionstyle]{\#\ ishl},
%%   moredelim=*[l][\instructionstyle]{\#\ ishr},
%%   moredelim=*[l][\instructionstyle]{\#\ isub},
%%   moredelim=*[l][\instructionstyle]{\#\ ixor},
%%   moredelim=*[l][\instructionstyle]{\#\ vload},         % Local Variables
%%   moredelim=*[l][\instructionstyle]{\#\ vstore},
%%   moredelim=*[l][\instructionstyle]{\#\ aconst\_null},  % Constants
%%   moredelim=*[l][\instructionstyle]{\#\ bipush},
%%   moredelim=*[l][\instructionstyle]{\#\ ildc},
%%   moredelim=*[l][\instructionstyle]{\#\ aldc},
%%   moredelim=*[l][\instructionstyle]{\#\ nop},           % Control Flow
%%   moredelim=*[l][\instructionstyle]{\#\ if\_cmpeq},
%%   moredelim=*[l][\instructionstyle]{\#\ if\_cmpne},
%%   moredelim=*[l][\instructionstyle]{\#\ if\_icmplt},
%%   moredelim=*[l][\instructionstyle]{\#\ if\_icmpge},
%%   moredelim=*[l][\instructionstyle]{\#\ if\_icmpgt},
%%   moredelim=*[l][\instructionstyle]{\#\ if\_icmple},
%%   moredelim=*[l][\instructionstyle]{\#\ goto},
%%   moredelim=*[l][\instructionstyle]{\#\ athrow},
%%   moredelim=*[l][\instructionstyle]{\#\ assert},
%%   moredelim=*[l][\instructionstyle]{\#\ invokestatic},  % Functions
%%   moredelim=*[l][\instructionstyle]{\#\ return},
%%   moredelim=*[l][\instructionstyle]{\#\ invokenative},
%%   moredelim=*[l][\instructionstyle]{\#\ new},           % Memory
%%   moredelim=*[l][\instructionstyle]{\#\ newarray},
%%   moredelim=*[l][\instructionstyle]{\#\ arraylength},
%%   moredelim=*[l][\instructionstyle]{\#\ aaddf},
%%   moredelim=*[l][\instructionstyle]{\#\ aadds},
%%   moredelim=*[l][\instructionstyle]{\#\ imload},
%%   moredelim=*[l][\instructionstyle]{\#\ amload},
%%   moredelim=*[l][\instructionstyle]{\#\ imstore},
%%   moredelim=*[l][\instructionstyle]{\#\ amstore},
%%   moredelim=*[l][\instructionstyle]{\#\ cmload},
%%   moredelim=*[l][\instructionstyle]{\#\ cmstore},
%% }

\newcommand{\opcodestyle}[1]{\textbf{#1}}
\newcommand{\transitionstyle}[1]{\textcolor{blue}{#1}}
\newcommand{\operandstyle}[1]{\textcolor{Red}{#1}}
\newcommand{\arrowstyle}[1]{\bfseries\transitionstyle{#1}}
\newcommand{\effectstyle}[1]{\textcolor{MidnightBlue}{#1}}

%% \lstdefinelanguage{opsem}{%
%%   numbers=none, numberstyle=\tiny, stepnumber=1, numbersep=5pt,   % Line numbers
%%   showspaces=false, showstringspaces=false,                       % Spaces
%%   tabsize=4,                                                      % Tabs
%%   breaklines=false, breakatwhitespace=false,                      % Line breaks
%%   basicstyle=\smallbasicstyle,                                    % Code style
%%   xleftmargin=-3em,
%%   columns=fixed,                                                  % Column alignment
%%   mathescape=true, escapeinside={[*}{*]},                         % escapes for $...$
%%   keywordstyle=[2]{\bfseries\contractstyle},
%% % opcodes
%%   moredelim=*[l][\opcodestyle]{0x},
%% % C0VM instructions
%%   moredelim=*[l][\instructionstyle]{dup},           % Stack operations
%%   moredelim=*[l][\instructionstyle]{pop},
%%   moredelim=*[l][\instructionstyle]{swap},
%%   moredelim=*[l][\instructionstyle]{iadd},          % Arithmetic
%%   moredelim=*[l][\instructionstyle]{iand},
%%   moredelim=*[l][\instructionstyle]{idiv},
%%   moredelim=*[l][\instructionstyle]{imul},
%%   moredelim=*[l][\instructionstyle]{ior},
%%   moredelim=*[l][\instructionstyle]{irem},
%%   moredelim=*[l][\instructionstyle]{ishl},
%%   moredelim=*[l][\instructionstyle]{ishr},
%%   moredelim=*[l][\instructionstyle]{isub},
%%   moredelim=*[l][\instructionstyle]{ixor},
%%   moredelim=*[l][\instructionstyle]{vload},         % Local Variables
%%   moredelim=*[l][\instructionstyle]{vstore},
%%   moredelim=*[l][\instructionstyle]{aconst\_null},  % Constants
%%   moredelim=*[l][\instructionstyle]{bipush},
%%   moredelim=*[l][\instructionstyle]{ildc},
%%   moredelim=*[l][\instructionstyle]{aldc},
%%   moredelim=*[l][\instructionstyle]{nop},           % Control Flow
%%   moredelim=*[l][\instructionstyle]{if\_cmpeq},
%%   moredelim=*[l][\instructionstyle]{if\_cmpne},
%%   moredelim=*[l][\instructionstyle]{if\_icmplt},
%%   moredelim=*[l][\instructionstyle]{if\_icmpge},
%%   moredelim=*[l][\instructionstyle]{if\_icmpgt},
%%   moredelim=*[l][\instructionstyle]{if\_icmple},
%%   moredelim=*[l][\instructionstyle]{goto},
%%   moredelim=*[l][\instructionstyle]{athrow},
%%   moredelim=*[l][\instructionstyle]{assert},
%%   moredelim=*[l][\instructionstyle]{invokestatic},  % Functions
%%   moredelim=*[l][\instructionstyle]{return},
%%   moredelim=*[l][\instructionstyle]{invokenative},
%%   moredelim=*[l][\instructionstyle]{new},           % Memory
%%   moredelim=*[l][\instructionstyle]{newarray},
%%   moredelim=*[l][\instructionstyle]{arraylength},
%%   moredelim=*[l][\instructionstyle]{aaddf},
%%   moredelim=*[l][\instructionstyle]{aadds},
%%   moredelim=*[l][\instructionstyle]{imload},
%%   moredelim=*[l][\instructionstyle]{amload},
%%   moredelim=*[l][\instructionstyle]{imstore},
%%   moredelim=*[l][\instructionstyle]{amstore},
%%   moredelim=*[l][\instructionstyle]{cmload},
%%   moredelim=*[l][\instructionstyle]{cmstore},
%% % Stack transition
%%   moredelim=*[l][\transitionstyle]{S},
%%   moredelim=*[l][\transitionstyle]{.},
%%   moredelim=*[l][\arrowstyle]{->},
%% % Side effects
%%   moredelim=[l][\effectstyle]{(},
%%   moredelim=[s][\effectstyle]{each}{)},
%%   % morecomment=[n]{(}{)},
%% % Exception to side effects
%%   moredelim=[s][\transitionstyle]{(a+}{:*},
%%   moredelim=[s][\transitionstyle]{(a->}{:*},
%% % Goto addresses
%%   moredelim=*[s][\operandstyle]{<}{>},
%%   moredelim=*[l][\transitionstyle]{<<},
%% % Misc
%%   moredelim=*[l][\basicstyle]{S\ =},
%%   moredelim=*[l][\basicstyle]{V[0..num_vars)},
%%   moredelim=*[l][\basicstyle]{(unsigned)},
%%   moredelim=*[l][\basicstyle]{(signed)},
%%   moredelim=*[s][\basicstyle]{(\"}{\")},
%%   moredelim=*[l][\basicstyle]{(c1<<8|c2)\ (unsigned)},
%%   moredelim=*[l][\basicstyle]{(o1<<8|o2)\ (signed)},
%%   moredelim=*[l][\basicstyle]{(v:*\ or\ v:w32)},
%% }


%%% Common commands
\newcommand{\normallistings}{
%  \lstset{language=[C0]C}
}
\newcommand{\smalllistings}{
  \lstset{%
    language=[C0]C,
    basicstyle=\smallbasicstyle,
  }
}
\newcommand{\smallerlistings}{
  \lstset{%
    language=[C0]C,
    basicstyle=\smallerbasicstyle,
  }
}

\normallistings

% Inline use of contract keywords
\newcommand{\requires}{{\contractstyle{\texttt{@requires}}}}
\newcommand{\ensures}{{\contractstyle{\texttt{@ensures}}}}
\newcommand{\loopinvariant}{{\contractstyle{\texttt{@loop\_invariant}}}}
\newcommand{\assert}{{\contractstyle{\texttt{@assert}}}}
\newcommand{\result}{{\contractstyle{\texttt{\textbackslash\emph{result}}}}}
\newcommand{\length}[1]{{\contractstyle{\texttt{\textbackslash\emph{length}#1}}}}
\newcommand{\old}[1]{{\contractstyle{\texttt{\textbackslash\emph{old}#1}}}}
\newcommand{\hastag}[1]{{\contractstyle{\texttt{\textbackslash\emph{hastag}#1}}}}

%% END: inline ../../c0.sty


%% %% Macros for rendering C0, C1, C, C0VM listings
%% \usepackage{../../c0}


%% % Must be loaded after listings
%\usepackage{tikz}

%% %% END: lectures.sty
%% END: OUT FOR DIDEROT

%% INSERT YOUR MACROS BELOW THIS LINE

\newcommand{\m}[1]{\mathsf{#1}}



%% Chapter 1
\newcommand{\POW}[2]{{#1}^{#2}}
\newcommand{\step}[2]{%
\item
{#1 }\hfill by~#2}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% END: PREAMBLE 15122
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
