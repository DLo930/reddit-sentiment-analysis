C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 11             # string pool total size
# string pool
48 61 70 70 79 20 43 61 72 6E 69 76 61 6C 21 0A 00  # "Happy Carnival!\n"

00 02             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 03             # number of local variables = 3
00 11             # code length = 17 bytes
14 00 00 # aldc 0          # s[0] = "Happy Carnival!\n"
B7 00 00 # invokenative 0  # print("Happy Carnival!\n")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
10 01    # bipush 1        # 1
10 0A    # bipush 10       # 10
B8 00 01 # invokestatic 1  # g(0, 1, 10)
B0       # return          # 


#<g>
00 03             # number of arguments = 3
00 03             # number of local variables = 3
00 30             # code length = 48 bytes
15 02    # vload 2         # n
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (n == 0) goto <00:then>
A7 00 09 # goto +9         # goto <01:else>
# <00:then>
15 00    # vload 0         # fn2
B0       # return          # 
A7 00 03 # goto +3         # goto <02:endif>
# <01:else>
# <02:endif>
15 02    # vload 2         # n
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (n == 1) goto <03:then>
A7 00 09 # goto +9         # goto <04:else>
# <03:then>
15 01    # vload 1         # fn3
B0       # return          # 
A7 00 03 # goto +3         # goto <05:endif>
# <04:else>
# <05:endif>
15 01    # vload 1         # fn3
15 00    # vload 0         # fn2
15 01    # vload 1         # fn3
60       # iadd            # (fn2 + fn3)
15 02    # vload 2         # n
10 01    # bipush 1        # 1
64       # isub            # (n - 1)
B8 00 01 # invokestatic 1  # g(fn3, (fn2 + fn3), (n - 1))
B0       # return          # 

00 01             # native count
# native pool
00 01 00 06       # print

