// Return both the sum of all numbers in A and whether 42 occurs
void sum_and_42(int[] A, int n, int* sum, bool* has_42)
//@requires n == \length(A);
//@requires sum != NULL && has_42 != NULL;
{
  *sum = 0;
  *has_42 = false;
  for (int i = 0; i < n; i++) {
    *sum += A[i];
    if (A[i] == 42) *has_42 = true;
  }
}


struct image_header {
  int width;
  int height;
  pixel_t[] data;
};
typedef struct image_header image;


int main() {
  int[] A = alloc_array(int, 10);
  for (int i = 0; i < 10; i++) A[i] = i - 5;
  int*  sum  = alloc(int);
  bool* fourtytwo = alloc(bool);
  sum_and_42(A, 10, sum, fourtytwo);

  // correct but clunky:
  // struct image_header* IMG = alloc(struct image_header);
  image* IMG = alloc(image);   // much easier to read!

  IMG->width = 3;
  IMG->height = 2;
  IMG->data = alloc_array(pixel, 6);

  return 0;
}
