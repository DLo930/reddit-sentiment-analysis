\section*{Preservation of loop invariants%
\TAGS{correctness, loop-invariant}}

Showing that a loop invariant is preserved can be a bit confusing: we
need to assume that the loop invariant, like \lstinline'e >= 0' or
\lstinline'r * POW(b,e) == POW(x,y)' is true just before we start
executing the body of the loop (it is checked just before the loop
guard), and use this information (together with the knowledge that the
loop guard evaluated to \lstinline'true') to show that it is also true
at the end of the loop (just before the loop guard is evaluated
again).  We do this relative to an \emph{arbitrary} iteration of the
loop.  Here's a \emph{different} loop body from what we saw in class.


\begin{lstlisting}[numbers=left]
    while (e > 0)
    //@loop_invariant e >= 0;
    //@loop_invariant r * POW(b, e) == POW(x, y);
    {
        r = r * b;
        e = e - 1;
        b = b;
    }
\end{lstlisting}

When an arbitrary loop begins, we know
\shortanswerline{~~~~$e > 0$ from the loop guard~~~~} and

\medskip
\shortanswerline{$r \times b^e = x^y$ from the loop invariant}.

\bigskip

After an arbitrary iteration of the loop, we use primed values to represent
the new values in terms of the old ones:

$b' = $ \answerline{$b$, by line 7 \quad}

$e' = $ \answerline{$e-1$, by line 6}

$r' = $ \answerline{$rb$, by line 5 \quad}

\bigskip
We need to show that \answerline{$e' \geq 0$ and $r' \times {b'}^{e'} = x^y$ \qquad}

\bigskip
This is true because \answerline{$r' \times {b'}^{e'} = r\times b \times b^{e-1} = r \times b^e = x^y$}

\bigskip
This terminates because
\answerline{the expression $e$ gets strictly smaller on each
iteration of the loop}

\answerline{and can't become negative.}

\bigskip
Because we haven't changed any loop invariants, the rest of the
correctness proof for exponentiation is the same as it was in
class. By keeping the loop invariant the same, we still have a
proven-correct function, even though we tore out loop body and
replaced it with a different (and less efficient) one!
