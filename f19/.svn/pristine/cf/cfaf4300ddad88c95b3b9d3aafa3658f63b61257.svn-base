\clearpage
\Question{Strings as Keys}

In a popular programming language, non-empty strings are hashed using
the following function:
$$
H(s)
\;\;=\;\;
(s_0 \times 31^{|s|-1} + s_1 \times 31^{|s|-2} + ... + s_{|s|-2} \times 31^1 + s_{|s|-1} \times 31^0)
\ \texttt{\%}\  m
$$
where $s_i$ is the ASCII code (\url{http://www.asciitable.com/}) for
the $i$\textsuperscript{th} character of string $s$ (starting at 0 and
counting from left to right), $|s|$ is the length of $s$, and $m$ is
the size of the hash table.  We consider 7-bit ASCII codes, so that
each character is encoded as a number between 0 and 127 (included).

\begin{parts}
%\newcommand{\nStrings}{15105} \newcommand{\hSize}{3021} % F16 S16
\newcommand{\nStrings}{15122} \newcommand{\hSize}{1223} % S19 S17


\part[0\half]\TAGS{hashing, string}
If \nStrings{} strings were stored in a hash table of size \hSize{} using
separate chaining, what would the load factor of the table be?  If the
strings above were equally distributed in the hash table, what does
the load factor tell you about the possible lengths of the chains?
\begin{framed}
\newcommand\FPuse[1]{\FPeval{\result}{#1}{\result}}
\def\Floor#1{\the\numexpr#1\relax}
\def\Ceiling#1{\the\numexpr#1+1\relax}

\medskip
The load factor is \uanswer{26em}{\nStrings{}/\hSize{} =
  \FPuse{round(\nStrings/\hSize, 2)}}

\bigskip
Each chain has length \uanswer{24.2em}{between
  \Floor{\nStrings/\hSize} and \Ceiling{\nStrings/\hSize}}
\end{framed}

\RUBRIC
NOTE: The answers depend on the values given for number of strings (n) and table size (m):

Part (a)
TAGS: hashing, string

Gradescope rubric:
+ 0.25 pt  load factor = 12.36 or 15122/1223
+ 0.25 pt  EITHER Each chain has length between 12 and 13.
+ 0.125 pt OR     only 12 or only 13

Commentary:
  With n = 15122 and m = 1223 (S19 S17):
  - The load factor is n/m = 15122/1223 = 12.36.
  - Each chain in a uniformly distributed hast table has length between 12 and 13.

  With n = 15105 and m = 3021 (S16, F16):
  - The load factor is n/m = 15105/3021 = 5.
  - Each chain in a uniformly distributed hast table has length 5.
ENDRUBRIC


\part[0\half]\TAGS{hashing, string}
Using the hash function above with a table size of \hSize{}, give an
example of two different strings that would ``collide'' in the hash
table and would be stored in the same chain. Show your work. (For your
own sake, and ours, use strings of up to 2 printable characters.)
\begin{framed}
\ifprintanswers{\color{\answerColor}
For example ``aa'' and ``bB'' since (using ``a'', ``b'' and ``B'' --
ascii 97, 98 and 66):
\begin{itemize}
\item H(``aa'') = 97 * 31 + 97 = 3007 + 97 = 3104
\item H(``bB'') = 98 * 31 + 66 = 3038 + 66 = 3104
\end{itemize}
}\else~\vspace{3in}\fi
\end{framed}

\RUBRIC
Part (b)
TAGS: hashing, string

Gradescope rubric:
+0.5 pt: valid strings (e.g., ``aa'' and ``bB'')

Commentary:
* Example (using ``a'', ``b'' and ``B'' -- ascii 97, 98 and 66):
  . H(``aa'') = 97 * 31 + 97 = 3007 + 97 = 3104
  . H(``bB'') = 98 * 31 + 66 = 3038 + 66 = 3104
* If H returns the same result, the modulus doesn't matter.

ENDRUBRIC

\end{parts}
