int add (int x, int y)
//@ensures \result == x + y;
{
    int a = x;
    int b = y;
    while (b >= 0)
    //@loop_invariant a + b == x + y;
    {
        a++;
        b--;
    }
    // We need b == 0 here because we can't get a strong enough statement from
    // just the loop invariant. If b < 0 , the loop invariant would be
    // true, and the result might not be correct from just the loop invariant.
    //@assert b == 0;
    return a;
}
