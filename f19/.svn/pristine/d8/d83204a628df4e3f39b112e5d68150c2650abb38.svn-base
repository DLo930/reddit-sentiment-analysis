C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 00             # string pool total size
# string pool

00 02             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 32             # number of local variables = 50
00 1B             # code length = 27 bytes
10 0C    # bipush 12       # 12
36 00    # vstore 0        # x = 12;
10 10    # bipush 16       # 16
36 01    # vstore 1        # y = 16;
15 00    # vload 0         # x
15 01    # vload 1         # y
60       # iadd            # (x + y)
B8 00 01 # invokestatic 1  # foo((x + y))
36 02    # vstore 2        # z = foo((x + y));
15 00    # vload 0         # x
15 01    # vload 1         # y
60       # iadd            # (x + y)
15 02    # vload 2         # z
60       # iadd            # ((x + y) + z)
B0       # return          # 


#<foo>
00 01             # number of arguments = 1
00 32             # number of local variables = 50
01 5D             # code length = 349 bytes
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 01    # vstore 1        # a1 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 02    # vstore 2        # a2 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 03    # vstore 3        # a3 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 04    # vstore 4        # a4 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 05    # vstore 5        # a5 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 06    # vstore 6        # a6 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 07    # vstore 7        # a7 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 08    # vstore 8        # a8 = (a0 + 1);
15 00    # vload 0         # a0
10 01    # bipush 1        # 1
60       # iadd            # (a0 + 1)
36 09    # vstore 9        # a9 = (a0 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0A    # vstore 10       # a10 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0B    # vstore 11       # a11 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0C    # vstore 12       # a12 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0D    # vstore 13       # a13 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0E    # vstore 14       # a14 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 0F    # vstore 15       # a15 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 10    # vstore 16       # a16 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 11    # vstore 17       # a17 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 12    # vstore 18       # a18 = (a1 + 1);
15 01    # vload 1         # a1
10 01    # bipush 1        # 1
60       # iadd            # (a1 + 1)
36 13    # vstore 19       # a19 = (a1 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 14    # vstore 20       # a20 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 15    # vstore 21       # a21 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 16    # vstore 22       # a22 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 17    # vstore 23       # a23 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 18    # vstore 24       # a24 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 19    # vstore 25       # a25 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 1A    # vstore 26       # a26 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 1B    # vstore 27       # a27 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 1C    # vstore 28       # a28 = (a2 + 1);
15 02    # vload 2         # a2
10 01    # bipush 1        # 1
60       # iadd            # (a2 + 1)
36 1D    # vstore 29       # a29 = (a2 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 1E    # vstore 30       # a30 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 1F    # vstore 31       # a31 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 20    # vstore 32       # a32 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 21    # vstore 33       # a33 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 22    # vstore 34       # a34 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 23    # vstore 35       # a35 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 24    # vstore 36       # a36 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 25    # vstore 37       # a37 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 26    # vstore 38       # a38 = (a3 + 1);
15 03    # vload 3         # a3
10 01    # bipush 1        # 1
60       # iadd            # (a3 + 1)
36 27    # vstore 39       # a39 = (a3 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 28    # vstore 40       # a40 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 29    # vstore 41       # a41 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2A    # vstore 42       # a42 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2B    # vstore 43       # a43 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2C    # vstore 44       # a44 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2D    # vstore 45       # a45 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2E    # vstore 46       # a46 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 2F    # vstore 47       # a47 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 30    # vstore 48       # a48 = (a4 + 1);
15 04    # vload 4         # a4
10 01    # bipush 1        # 1
60       # iadd            # (a4 + 1)
36 31    # vstore 49       # a49 = (a4 + 1);
15 00    # vload 0         # a0
15 31    # vload 49        # a49
60       # iadd            # (a0 + a49)
B0       # return          # 

00 00             # native count
# native pool

