#use <conio>

int main () {

  // Generic stacks

  // A stack of strings
  stack_t S = stack_new();

  string* s1 = alloc(string);     // Push a value
  *s1 = "hello";
  push(S, (void*)s1);

  string* tmp = alloc(string);    // Push another
  *tmp = "world";
  push(S, (void*)tmp);

  void* pS = pop(S);              // Pop it
  string* s2 = (string*)pS;       // Cast it to a string*
  println(*s2);

  println(*(string*) pop(S));     // Pop the first one


  // A stack of ints
  stack_t I = stack_new();

  int* x = alloc(int);
  *x = 42;
  push(I, (void*)x);              // Push an int*

  int* y = alloc(int);
  *y = 15122;
  void* p = (void*)y;
  push(I, p);                     // and another one

  int* z = (int*)pop(I);          // pop the last int*
  printint(*z); println("");


  // Void pointers in general
  int *n = alloc(int);
  *n = 42;                        // n is an int*
  void* pn = (void*)n;            // p secretly points to an int
  // string *s = (string*)pn;     // turning an int* into a string* ??
  // print(*s);                   // makes no sense!

  void* p1 = (void*)alloc(int);
  void* p2 = (void*)alloc(string);
  void* p3 = (void*)alloc(int**);

  //@assert \hastag(int*, p1);
  //@assert \hastag(string*, p2);
  //@assert \hastag(int***, p3);

  //@assert !\hastag(string*, p1);
  //@assert !\hastag(int**, p1);
  //@assert !\hastag(int***, p1);

  // NULL is a pointer of any type, including void*
  void* q = NULL;
  void* r = (void*)(int*)(void*)(string*)q;

  return 0;
}
