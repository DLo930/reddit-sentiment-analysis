\clearpage
\Question{Reasoning with Loop Invariants}

Consider the following function in C0:

\begin{lstlisting}[numbers=left]
int mystery1(int n)
//@requires n > 0;
//@ensures \result == n * n;
{
  int k = 0;
  int i = 0;
  while (i < n)[*\label{l:loop-invariant:lg}*]
  //@loop_invariant 0 <= i && i <= n;     /* LI1 */[*\label{l:loop-invariant:LI1}*]
  //@loop_invariant k == i * i;           /* LI2 */[*\label{l:loop-invariant:LI2}*]
  {
\end{lstlisting}
\begin{lstlisting}[numbers=none,aboveskip=0pt,belowskip=0pt]
     // body of loop, which modifies k and i, not shown
\end{lstlisting}
\begin{lstlisting}[numbers=left, firstnumber=42]
  }
  return k;[*\label{l:loop-invariant:ret-k}*]
}
\end{lstlisting}

Assume that the precondition is satisfied for the function above.

\begin{parts}
\part[1]\TAGS{correctness, loop-invariant}
If the loop terminates, what is true about \lstinline'i' on
line~\ref{l:loop-invariant:ret-k} based on the loop condition on
line~\ref{l:loop-invariant:lg} immediately after the loop guard
evaluates to \lstinline'false'?
\begin{framed}
\ifprintanswers{\color{\answerColor}
\lstinline'i >= n'
}\else~\vspace{0.4in}\fi
\end{framed}

Given your observation above and the first loop invariant on
line~\ref{l:loop-invariant:LI1}, what can you infer about the value of
\lstinline'i' immediately after the loop guard evaluates to
\lstinline'false'?
\begin{framed}
\ifprintanswers{\color{\answerColor}
\lstinline'i >= n'
}\else~\vspace{0.4in}\fi
\end{framed}

\RUBRIC
Part (a)
TAGS: correctness, loop-invariant

Gradescope rubric:  TODO

Commentary:
  - First blank, 1/2 point: i >= n
  - Second blank, 1/2 point: i == n
ENDRUBRIC

\part[1]\TAGS{correctness, loop-invariant}
Given the final result in part (a) and the second loop invariant on
line~\ref{l:loop-invariant:LI2}, what can you conclude about the value
of the variable \lstinline'k' immediately after the loop guard
evaluates to \lstinline'false'?
\begin{framed}
\ifprintanswers{\color{\answerColor}
\lstinline'k == n * n'
}\else~\vspace{0.4in}\fi
\end{framed}

How do your observations about \lstinline'k' above prove that the
postcondition is satisfied?
\begin{framed}
\ifprintanswers{\color{\answerColor}
\lstinline'k' is returned and \lstinline'k' is \lstinline'n * n', so
\lstinline'\result == n * n'.
}\else~\vspace{0.4in}\fi
\end{framed}


\RUBRIC
Part (b)
TAGS: correctness, loop-invariant

Gradescope rubric:  TODO

Commentary:
  - First blank, 1/2 point: k == n * n (full credit for MATHEMATICAL
    notation n superscript 2, no credit for "n**2")
  - Second blank, 1/2 point: k is returned and k is n * n, so \result
    == n * n. No they don't have to be this picky.
ENDRUBRIC

\newpage
\part[2]\TAGS{testing, loop-invariant}
Here is a loop body for a \emph{different} function --- the
loop invariants are the same, but the loop guard and returned value
are different. A function body has also been included.

\bigskip

\begin{lstlisting}[numbers=left]
int mystery2(int n)
//@requires n > 0;
// postcondition not shown
{
  int k = 0;
  int i = 0;
  while (k < n)
  //@loop_invariant 0 <= i && i <= n;              /* LI1 */
  //@loop_invariant k == i * i;                    /* LI2 */
  {
    k = k + 2*i + 1;
    i = i + 1;
  }
  return i;
}
\end{lstlisting}

\bigskip

For an initial \lstinline'n' equal to 47, trace the values of
\lstinline'k', \lstinline'i', and \lstinline'n', always reporting
their values immediately \emph{before} the loop guard is
checked. Observe that the loop invariants should be true each time.
(\emph{Note that you may not need all lines below.})

\begin{center}
\renewcommand{\arraystretch}{1.7}
\newcommand{\ans}[1]{\uanswer{2em}{\tt #1}}
\begin{tabular}{l*{5}{@{\hspace{2.5em}}c}}
   Iteration   & \lstinline'k' & \lstinline'i' & \lstinline'n' & \lstinline'LI1' & \lstinline'LI2'
\\\hline
   0 (initial)  & 0 & 0 & 47 & \lstinline'true' & \lstinline'true'
\\ 1 & \ans{1}  & \ans{1} & \ans{47} & \ans{true} & \ans{true}
\\ 2 & \ans{4}  & \ans{2} & \ans{47} & \ans{true} & \ans{true}
\\ 3 & \ans{9}  & \ans{4} & \ans{47} & \ans{true} & \ans{true}
\\ 4 & \ans{16} & \ans{4} & \ans{47} & \ans{true} & \ans{true}
\\ 5 & \ans{25} & \ans{5} & \ans{47} & \ans{true} & \ans{true}
\\ 6 & \ans{36} & \ans{6} & \ans{47} & \ans{true} & \ans{true}
\\ 7 & \ans{49} & \ans{7} & \ans{47} & \ans{true} & \ans{true}
\\ 8 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\ 9 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\10 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\end{tabular}
\end{center}

\RUBRIC
Part (c 1)
TAGS: testing, loop-invariant

Gradescope rubric:  TODO

Commentary:
  1 point, all or nothing
  Iteration      k i n   LI1  LI2
  --------------------------------------------------
  0 (initial)    0 0 47  true true
  1              1 1 47  true true
  2              4 2 47  true true
  3              9 3 47  true true
  4             16 4 47  true true
  5             25 5 47  true true
  6             36 6 47  true true
  7             49 7 47  true true
ENDRUBRIC

\newpage
\TAGS{testing, loop-invariant}
Same exercise, but this time for \lstinline'n' initially equal to 16.

\begin{center}
\renewcommand{\arraystretch}{1.7}
\newcommand{\ans}[1]{\uanswer{2em}{\tt #1}}
\begin{tabular}{l*{5}{@{\hspace{2.5em}}c}}
   Iteration   & \lstinline'k' & \lstinline'i' & \lstinline'n' & \lstinline'LI1' & \lstinline'LI2'
\\\hline
   0 (initial) & 0 & 0 & 16 & \lstinline'true' & \lstinline'true'
\\ 1 & \ans{1}  & \ans{1} & \ans{16} & \ans{true} & \ans{true}
\\ 2 & \ans{4}  & \ans{2} & \ans{16} & \ans{true} & \ans{true}
\\ 3 & \ans{9}  & \ans{3} & \ans{16} & \ans{true} & \ans{true}
\\ 4 & \ans{16} & \ans{4} & \ans{16} & \ans{true} & \ans{true}
\\ 5 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\ 6 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\ 7 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\ 8 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\ 9 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\\10 & \ans{}   & \ans{}  & \ans{}   & \ans{}     & \ans{}
\end{tabular}
\end{center}

\RUBRIC
Part (c 2)
TAGS: testing, loop-invariant

Gradescope rubric:  TODO

Commentary:
  1 point, all or nothing
  Iteration      k i n   LI1  LI2
  --------------------------------------------------
  0 (initial)    0 0 16  true true
  1              1 1 16  true true
  2              4 2 16  true true
  3              9 3 16  true true
  4             16 4 16  true true
ENDRUBRIC

\part[1]\TAGS{testing}
In one sentence, describe what the function in part (c) is computing.
(What is its postcondition?)
\begin{framed}
\ifprintanswers
\begin{lstlisting}[basicstyle=\basicstyle\color{\answerColor}]
/*@ensures \result * \result >= n
        && (\result - 1) * (\result - 1) < n; @*/
\end{lstlisting}
\else~\vspace{1.4in}\fi
\end{framed}

\RUBRIC
Part (d)
TAGS: testing

Gradescope rubric:  TODO

Commentary:
  1 point, all or nothing, the two clauses in either order:
       \result * \result >= n && (\result - 1) * (\result - 1) < n;
ENDRUBRIC


\part[1]\TAGS{testing, loop-invariant}
\emph{Harder:} what additional loop invariant(s) are necessary for
the function in part (c) to prove that the postcondition you gave
holds?
\begin{framed}
\ifprintanswers{\color{\answerColor}
\begin{lstlisting}[basicstyle=\basicstyle\color{\answerColor}]
//@loop_invariant n == 1 || (i-1) * (i-1) < n;
\end{lstlisting}
}\else~\vspace{1.4in}\fi
\end{framed}

\RUBRIC
Part (e)
TAGS: testing, loop-invariant

Gradescope rubric:  TODO

Commentary:
  1 point, give half credit if they have only the second clause.
       n == 1 || (i-1) * (i-1) < n
ENDRUBRIC

\end{parts}