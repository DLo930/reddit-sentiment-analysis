\section*{Reasoning about reversing a decimal number}

For these two tasks, you'll need to use a loop to manipulate integers. Your
loop should include loop invariants that allow you to prove the correctness and
safety of the function.

\begin{part}\TAGS{loop-invariant}
Our first task will be to write loop invariants for an algorithm that reverses
the digits in a seven-digit decimal number (a number with fewer digits will be
treated as having leading zeros) using mathematical operations.  Although there
is more than one way to do this, we've provided the steps of a suggested
algorithm run on three examples below, which shows the state of each of the
different variables at iteration \lstinline'i' in the loop:
$$
\begin{array}{lll}
\texttt{i} & \texttt{x} & \texttt{y}\\\hline
0 & 1234567 & 0       \\
1 & 123456  & 7       \\
2 & 12345   & 76      \\
3 & 1234    & 765     \\
4 & 123     & 7654    \\
5 & 12      & 76543   \\
6 & 1       & 765432  \\
7 & 0       & 7654321 \\
\end{array}
\quad
\begin{array}{lll}
\texttt{i} & \texttt{x} & \texttt{y}\\\hline
0 & 15122   & 0       \\
1 & 1512    & 2       \\
2 & 151     & 22      \\
3 & 15      & 221     \\
4 & 1       & 2215    \\
5 & 0       & 22151   \\
6 & 0       & 221510  \\
7 & 0       & 2215100 \\
\end{array}
\quad
\begin{array}{lll}
\texttt{i} & \texttt{x} & \texttt{y}\\\hline
0 & 2400000 & 0       \\
1 & 240000  & 0       \\
2 & 24000   & 0       \\
3 & 2400    & 0       \\
4 & 240     & 0       \\
5 & 24      & 0       \\
6 & 2       & 4       \\
7 & 0       & 42      \\
\end{array}
$$

Can you suggest a couple of loop invariants for the algorithm above?
\textbf{Hint:} you may want to use the \lstinline'POW' specification from
lecture. What can you say about \lstinline'POW(10,i)'?

\begin{lstlisting}[lineskip=2.3ex]
//@loop_invariant [*\answerline{0 <= i \&\& i <= 7;}*]
//@loop_invariant [*\answerline{y <= POW(10, i);}*]
//@loop_invariant [*\answerline{x <= POW(10, 7-i);}*]
\end{lstlisting}

\medskip
Remember that if you use \lstinline'POW', you need your loop invariants to
also ensure that the exponent will always be nonnegative.
\end{part}

\newpage
\begin{part}\TAGS{loop-invariant}
  Next, we'll write loop invariants for an algorithm that reverses
  seven-digit numbers using arrays (note that this algorithm uses two
  sequential loops, denoted by \lstinline'i' followed by
  \lstinline'j').  Again, we provide steps of an algorithm that you
  can use when implementing the code in (2.b):

$$
\begin{array}{lll}
\texttt{i} & \texttt{x} & \texttt{A}\\\hline
0 & 1234567 & \begin{array}{|c|c|c|c|c|c|c|}\hline0&0&0&0&0&0&0\\\hline\end{array}\\
1 & 123456  & \begin{array}{|c|c|c|c|c|c|c|}\hline7&0&0&0&0&0&0\\\hline\end{array}\\
2 & 12345   & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&0&0&0&0&0\\\hline\end{array}\\
3 & 1234    & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&0&0&0&0\\\hline\end{array}\\
4 & 123     & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&0&0&0\\\hline\end{array}\\
5 & 12      & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&0&0\\\hline\end{array}\\
6 & 1       & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&0\\\hline\end{array}\\
7 & 0       & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
\end{array}
\quad
\begin{array}{lll}
\texttt{j} & \texttt{y} & \texttt{A}\\\hline
0 & 0       & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
1 & 7       & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
2 & 76      & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
3 & 765     & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
4 & 7654    & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
5 & 76543   & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
6 & 765432  & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
7 & 7654321 & \begin{array}{|c|c|c|c|c|c|c|}\hline7&6&5&4&3&2&1\\\hline\end{array}\\
\end{array}
$$

Again, let's suggest a couple of loop invariants for the second (right) loop
above.  \textbf{Hint:} make sure you're ensuring the safety of the array
accesses!

\begin{lstlisting}[lineskip=2.3ex]
//@loop_invariant [*\answerline{0 <= j \&\& j <= \textbackslash length(A);}*]
//@loop_invariant [*\answerline{j == 0 ? y == 0 : y \% 10 == A[j-1];}*]
\end{lstlisting}
\end{part}
