C0 C0 FF EE       # magic number
00 0D             # version 6, arch = 1 (64 bits)

00 03             # int pool count
# int pool
00 23 41 BA
00 00 01 6F
00 00 03 D0

02 B8             # string pool total size
# string pool
52 65 73 70 65 63 74 00 74 68 65 20 69 6E 74 65 72 66 61 63 65 00 57
65 6C 63 6F 6D 65 20 74 6F 20 44 72 2E 20 45 76 69 6C 27 73 20 53 75
70 65 72 20 53 65 63 72 65 74 20 45 76 69 6C 20 50 6C 61 6E 20 54 65
72 6D 69 6E 61 6C 00 54 68 69 73 20 74 65 72 6D 69 6E 61 6C 20 73 68
6F 75 6C 64 20 6F 6E 6C 79 20 62 65 20 72 75 6E 20 62 79 20 44 72 2E
20 45 76 69 6C 20 74 6F 20 72 65 61 64 20 74 68 65 20 53 75 70 65 72
20 53 65 63 72 65 74 20 45 76 69 6C 20 50 6C 61 6E 2E 00 49 66 20 79
6F 75 20 61 72 65 20 61 6E 79 6F 6E 65 20 65 6C 73 65 2C 20 67 65 74
20 4F 55 54 2E 00 50 61 73 73 77 6F 72 64 31 3A 20 00 49 4E 43 4F 52
52 45 43 54 20 50 41 53 53 57 4F 52 44 2E 20 54 72 79 20 61 67 61 69
6E 3A 20 00 50 61 73 73 77 6F 72 64 31 20 63 6F 72 72 65 63 74 2E 00
54 68 65 72 65 27 73 20 74 68 65 20 66 69 72 73 74 20 6F 6E 65 2E 00
50 61 73 73 77 6F 72 64 32 3A 20 00 49 4E 43 4F 52 52 45 43 54 20 50
41 53 53 57 4F 52 44 2E 20 54 72 79 20 61 67 61 69 6E 3A 20 00 50 61
73 73 77 6F 72 64 32 20 63 6F 72 72 65 63 74 2E 00 54 77 6F 20 64 6F
77 6E 2C 20 74 68 72 65 65 20 74 6F 20 67 6F 2E 00 50 61 73 73 77 6F
72 64 33 3A 20 00 4E 6F 70 65 2E 20 4B 65 65 70 20 74 72 79 69 6E 67
3A 20 00 50 61 73 73 77 6F 72 64 33 20 63 6F 72 72 65 63 74 2E 00 48
6F 77 27 73 20 79 6F 75 72 20 64 61 79 20 67 6F 69 6E 67 20 73 6F 20
66 61 72 3F 20 4D 69 6E 65 27 73 20 62 65 65 6E 20 73 77 65 6C 6C 2E
00 50 61 73 73 77 6F 72 64 34 3A 20 00 4E 6F 70 65 2E 20 4B 65 65 70
20 74 72 79 69 6E 67 3A 20 00 50 61 73 73 77 6F 72 64 34 20 63 6F 72
72 65 63 74 2E 00 4C 61 73 74 20 6F 6E 65 21 00 50 61 73 73 77 6F 72
64 35 3A 20 00 4E 6F 70 65 2E 20 4B 65 65 70 20 74 72 79 69 6E 67 3A
20 00 50 61 73 73 77 6F 72 64 35 20 63 6F 72 72 65 63 74 2E 00 41 6C
6C 20 66 69 76 65 20 70 61 73 73 77 6F 72 64 73 20 68 61 76 65 20 62
65 65 6E 20 65 6E 74 65 72 65 64 2E 20 55 6E 6C 6F 63 6B 69 6E 67 20
44 72 2E 20 45 76 69 6C 27 73 20 53 75 70 65 72 20 45 76 69 6C 20 53
65 63 72 65 74 20 50 6C 61 6E 2E 00 43 6F 6E 67 72 61 74 75 6C 61 74
69 6F 6E 73 20 6F 6E 20 63 6F 6D 70 65 6C 65 74 69 6E 67 20 74 68 65
20 6C 61 62 21 00

00 09             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 06             # number of local variables = 6
01 A1             # code length = 417 bytes
14 00 16 B7 00 05 57 14 00 4C B7 00 05 57 14 00 9D B7 00 05 57 14 00
BE B7 00 06 57 B7 00 07 57 B7 00 08 10 0A B7 00 04 36 00 15 00 01 9F
00 12 A7 00 03 15 00 2E B8 00 01 A0 00 06 A7 00 1B 14 00 CA B7 00 06
57 B7 00 07 57 B7 00 08 10 0A B7 00 04 36 00 A7 FF D6 14 00 EA B7 00
05 57 14 00 FD B7 00 05 57 14 01 14 B7 00 06 57 B7 00 07 57 B7 00 08
10 0A B7 00 04 36 01 15 01 01 9F 00 12 A7 00 03 15 01 2E B8 00 02 A0
00 06 A7 00 1B 14 01 20 B7 00 06 57 B7 00 07 57 B7 00 08 10 0A B7 00
04 36 01 A7 FF D6 14 01 40 B7 00 05 57 14 01 53 B7 00 05 57 14 01 6A
B7 00 06 57 B7 00 07 57 B7 00 08 10 0A B7 00 04 36 02 15 02 01 9F 00
14 A7 00 03 15 02 2E B8 00 03 10 01 9F 00 1E A7 00 03 14 01 76 B7 00
06 57 B7 00 07 57 B7 00 08 10 0A B7 00 04 36 02 A7 FF D4 14 01 8A B7
00 05 57 14 01 9D B7 00 05 57 14 01 CD B7 00 06 57 B7 00 07 57 B7 00
08 10 0A B7 00 04 36 03 15 03 01 9F 00 14 A7 00 03 15 03 2E B8 00 04
10 01 9F 00 1E A7 00 03 14 01 D9 B7 00 06 57 B7 00 07 57 B7 00 08 10
0A B7 00 04 36 03 A7 FF D4 14 01 ED B7 00 05 57 14 02 00 B7 00 05 57
14 02 0A B7 00 06 57 B7 00 07 57 B7 00 08 36 04 15 04 B8 00 06 10 01
9F 00 19 A7 00 03 14 02 16 B7 00 06 57 B7 00 07 57 B7 00 08 36 04 A7
FF E3 14 02 2A B7 00 05 57 14 02 3D B7 00 05 57 14 02 90 B7 00 05 57
10 00 B0


#<password1>
00 00             # number of arguments = 0
00 00             # number of local variables = 0
00 09             # code length = 9 bytes
10 14    # bipush 20
10 32    # bipush 50
68       # imul
10 1F    # bipush 31
60       # iadd
B0       # return


#<password2>
00 00             # number of arguments = 0
00 03             # number of local variables = 3
00 18             # code length = 24 bytes
10 05    # bipush 5
36 00    # vstore 0
15 00    # vload 0
36 01    # vstore 1
15 01    # vload 1
10 05    # bipush 5
60       # iadd
36 02    # vstore 2
15 00    # vload 0
15 01    # vload 1
68       # imul
15 02    # vload 2
60       # iadd
B0       # return


#<password3>
00 01             # number of arguments = 1
00 03             # number of local variables = 3
00 1B             # code length = 27 bytes
15 00    # vload 0
13 00 00 # ildc 0
60       # iadd
13 00 01 # ildc 1
70       # irem
10 00    # bipush 0
9F 00 06 # if_cmpeq +6
A7 00 09 # goto +9
10 01    # bipush 1
B0       # return
A7 00 03 # goto +3
10 00    # bipush 0
B0       # return


#<password4>
00 01             # number of arguments = 1
00 03             # number of local variables = 3
00 36             # code length = 54 bytes
15 00    # vload 0
36 01    # vstore 1
10 00    # bipush 0
36 02    # vstore 2
15 02    # vload 2
10 03    # bipush 3
A1 00 06 # if_icmplt +6
A7 00 14 # goto +20
15 01    # vload 1
10 01    # bipush 1
78       # ishl
36 01    # vstore 1
15 02    # vload 2
10 01    # bipush 1
60       # iadd
36 02    # vstore 2
A7 FF E8 # goto -24
15 01    # vload 1
13 00 02 # ildc 2
9F 00 06 # if_cmpeq +6
A7 00 08 # goto +8
10 01    # bipush 1
A7 00 05 # goto +5
10 00    # bipush 0
B0       # return


#<func5>
00 02             # number of arguments = 2
00 03             # number of local variables = 3
00 08             # code length = 8 bytes
15 00    # vload 0
15 01    # vload 1
B7 00 00 # invokenative 0
B0       # return


#<password5>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 19             # code length = 25 bytes
15 00    # vload 0
14 00 08 # aldc 8
B8 00 05 # invokestatic 5
10 01    # bipush 1
9F 00 06 # if_cmpeq +6
A7 00 09 # goto +9
10 01    # bipush 1
B0       # return
A7 00 03 # goto +3
10 00    # bipush 0
B0       # return


#<readsixnumbers>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 62             # code length = 98 bytes
15 00    # vload 0
B7 00 01 # invokenative 1
36 01    # vstore 1
10 06    # bipush 6
BC 04    # newarray 4
36 02    # vstore 2
14 00 00 # aldc 0
15 00    # vload 0
10 00    # bipush 0
10 07    # bipush 7
B7 00 02 # invokenative 2
B7 00 00 # invokenative 0
10 01    # bipush 1
9F 00 06 # if_cmpeq +6
A7 00 3E # goto +62
10 00    # bipush 0
36 03    # vstore 3
15 03    # vload 3
10 06    # bipush 6
A1 00 06 # if_icmplt +6
A7 00 2D # goto +45
15 01    # vload 1
15 03    # vload 3
10 07    # bipush 7
60       # iadd
63       # aadds
34       # cmload
B7 00 03 # invokenative 3
36 04    # vstore 4
15 04    # vload 4
10 0A    # bipush 10
B7 00 04 # invokenative 4
36 05    # vstore 5
15 02    # vload 2
15 03    # vload 3
63       # aadds
15 05    # vload 5
2E       # imload
4E       # imstore
15 03    # vload 3
10 01    # bipush 1
60       # iadd
36 03    # vstore 3
A7 FF CF # goto -49
A7 00 03 # goto +3
15 02    # vload 2
B0       # return


#<password6>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 77             # code length = 119 bytes
15 00    # vload 0
B8 00 06 # invokestatic 7
36 01    # vstore 1
10 00    # bipush 0
36 02    # vstore 2
15 02    # vload 2
10 06    # bipush 6
A1 00 06 # if_icmplt +6
A7 00 62 # goto +98
10 00    # bipush 0
15 01    # vload 1
15 02    # vload 2
63       # aadds
2E       # imload
A4 00 06 # if_icmple +6
A7 00 11 # goto +17
15 01    # vload 1
15 02    # vload 2
63       # aadds
2E       # imload
10 06    # bipush 6
A1 00 0C # if_icmplt +12
A7 00 03 # goto +3
10 00    # bipush 0
B0       # return
A7 00 03 # goto +3
15 02    # vload 2
10 01    # bipush 1
60       # iadd
36 03    # vstore 3
15 03    # vload 3
10 06    # bipush 6
A1 00 06 # if_icmplt +6
A7 00 25 # goto +37
15 01    # vload 1
15 02    # vload 2
63       # aadds
2E       # imload
15 01    # vload 1
15 03    # vload 3
63       # aadds
2E       # imload
9F 00 06 # if_cmpeq +6
A7 00 09 # goto +9
10 00    # bipush 0
B0       # return
A7 00 03 # goto +3
15 03    # vload 3
10 01    # bipush 1
60       # iadd
36 03    # vstore 3
A7 FF D7 # goto -41
15 02    # vload 2
10 01    # bipush 1
60       # iadd
36 02    # vstore 2
A7 FF 9A # goto -102
10 01    # bipush 1
B0       # return


00 09             # native count
# native pool
00 02 00 57       # string_equal
00 01 00 60       # string_to_chararray
00 03 00 5E       # string_sub
00 01 00 5A       # string_fromchar
00 02 00 50       # parse_int
00 01 00 14       # println
00 01 00 10       # print
00 00 00 0F       # flush
00 00 00 15       # readline

