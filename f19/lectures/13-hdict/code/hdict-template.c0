#use <util>

/************************/
/*** Client interface ***/
/************************/

// typedef ______* entry;       // Supplied by client
// typedef ______ key;          // Supplied by client

key  entry_key(entry x)         // Supplied by client
  /*@requires x != NULL; @*/ ;
int  key_hash(key k);           // Supplied by client
bool key_equiv(key k1, key k2); // Supplied by client


/******************************/
/*** Library implementation ***/
/******************************/

typedef struct chain_node chain;
struct chain_node {
  /* WRITE ME */
};

typedef struct hdict_header hdict;
struct hdict_header {
  /* WRITE ME */
};

bool is_array_expected_length(chain*[] table, int length) {
  //@assert \length(table) == length;
  return true;
}

bool is_hdict(hdict* H) {
  return  H != NULL
       && H->capacity > 0
       && H->size >= 0
       && is_array_expected_length(H->table, H->capacity);
 /*    && ... */
}

int index_of_key(hdict* H, key k)
//@requires is_hdict(H);
//@ensures 0 <= \result && \result < H->capacity;
{
  return abs(key_hash(k) % H->capacity);
}

hdict* hdict_new(int capacity)
//@requires capacity > 0;
//@ensures is_hdict(\result);
{
  /* WRITE ME */
  return NULL;
}

entry hdict_lookup(hdict* H, key k)
//@requires is_hdict(H);
/*@ensures \result == NULL
        || key_equiv(entry_key(\result), k); @*/
{
  /* WRITE ME */
  return NULL;
}

void hdict_insert(hdict* H, entry x)
//@requires is_hdict(H);
//@requires x != NULL;
//@ensures is_hdict(H);
//@ensures hdict_lookup(H, entry_key(x)) == x;
{
  /* WRITE ME */
}

// Client-side type
typedef hdict* hdict_t;


/*************************/
/*** Library interface ***/
/*************************/

// typedef ______* hdict_t;

hdict_t hdict_new(int capacity)
/*@requires capacity > 0; @*/
/*@ensures \result != NULL; @*/ ;

entry hdict_lookup(hdict_t H, key k)
/*@requires H != NULL; @*/
/*@ensures \result == NULL
        || key_equiv(entry_key(\result), k); @*/ ;

void hdict_insert(hdict_t H, entry x)
/*@requires H != NULL; @*/
/*@requires x != NULL; @*/
/*@ensures hdict_lookup(H, entry_key(x)) == x; @*/ ;
