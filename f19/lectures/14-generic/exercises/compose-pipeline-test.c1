#use <conio>

int add5(int x){
  return x+5;
}

int mul2(int x){
  return 2*x;
}

int square(int x){
  return x*x;
}


int main(){

  for(int x=0; x<10000; x++){
    assert(compose(&add5, &mul2,x)==2*x+5);
    assert(compose(&mul2, &add5,x)==2*(x+5));
    assert(compose(&add5, &square,x)==x*x+5);
    assert(compose(&square, &add5,x)==(x+5)*(x+5));
  }

  for(int x=0; x<1000; x++){
    int2int_fn*[] F = alloc_array(int2int_fn*,3);
    F[0] = &add5;
    F[1] = &mul2;
    F[2] = &square;
    assert(pipeline(F, 3,x)==((x+5)*2)*((x+5)*2));
    F[0] = &add5;
    F[1] = &square;
    F[2] = &mul2;
    assert(pipeline(F, 3,x)==((x+5)*(x+5)*2));
    F[0] = &square;
    F[1] = &add5;
    F[2] = &mul2;
    assert(pipeline(F, 3,x)==((x*x+5)*2));
    assert(pipeline(alloc_array(int2int_fn*,0),0,x)==x);
  }




  println("All tests passed!");
  return 0;
}