/* Timing searching implementations
 */

#use <conio>
#use <rand>
#use <args>

int search_time(int n, int num_tests) 
//@requires 0 <= n && 0 <= num_tests;
{
  int seed = 0xc0c0ffee;
  rand_t gen = init_rand(seed);

  int[] A = alloc_array(int, n);

  print("Timing array of size "); printint(n);
  print(", "); printint(num_tests); print(" times\n");
  for (int i = 0; i < n; i++) {
    A[i] = rand(gen);
  }

  for (int j = 0; j < num_tests; j++) {
    search(rand(gen), A, n);
  }

  return 0;
}


int main() {
  int* n_ptr = alloc(int);
  *n_ptr = 0;
  args_int("-n", n_ptr);

  int* r_ptr = alloc(int);
  *r_ptr = 100;
  args_int("-r", r_ptr);

  args_parse();
  if(*n_ptr < 0) error("Size of array (-n <elems>) may not be negative");
  if (!(0 <= *r_ptr)) error("-r out of range");

  if (*n_ptr != 0) search_time(*n_ptr, *r_ptr);
  return 0;
}
