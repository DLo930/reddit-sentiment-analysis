/**** Implementation ****/
#use <util>
#use <string>

// Implementation-side type
/* Define me */





int ssa_len(ssa* A)
//@requires A != NULL;
{
  /* Write me! */
  return -1;
}

string ssa_get(ssa* A, int i)
//@requires A != NULL;
//@requires 0 <= i && i < ssa_len(A);
{
  /* Write me! */
  return "";
}

void ssa_set(ssa* A, int i, string x)
//@requires A != NULL;
//@requires 0 <= i && i < ssa_len(A);
{
  /* See lecture notes */
  return;
}

ssa* ssa_new(int size)
//@requires 0 <= size;
//@ensures \result != NULL;
//@ensures ssa_len(\result) == size;
{
  /* Write me! */
  return NULL;
}

// Client type
/* Define ssa_t */



/**** Interface ****/





































// typedef ______* ssa_t;

int ssa_len(ssa_t A)
  /*@requires A != NULL; @*/
  /*@ensures \result >= 0; @*/;

ssa_t ssa_new(int size)
  /*@requires 0 <= size; @*/
  /*@ensures \result != NULL; @*/
  /*@ensures ssa_len(\result) == size; @*/;

string ssa_get(ssa_t A, int i)
  /*@requires A != NULL; @*/
  /*@requires 0 <= i && i < ssa_len(A); @*/;

void ssa_set(ssa_t A, int i, string x)
  /*@requires A != NULL; @*/
  /*@requires 0 <= i && i < ssa_len(A); @*/;
