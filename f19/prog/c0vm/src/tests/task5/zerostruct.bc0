C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 00             # string pool total size
# string pool

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 02             # number of local variables = 2
00 71             # code length = 113 bytes
BB 0C    # new 12          # alloc(struct xyz)
36 00    # vstore 0        # w = alloc(struct xyz);
15 00    # vload 0         # w
62 00    # aaddf 0         # &w->x
2E       # imload          # w->x
15 00    # vload 0         # w
62 04    # aaddf 4         # &w->y
2E       # imload          # w->y
60       # iadd            # (w->x + w->y)
15 00    # vload 0         # w
62 08    # aaddf 8         # &w->z
2E       # imload          # w->z
60       # iadd            # ((w->x + w->y) + w->z)
36 01    # vstore 1        # i = ((w->x + w->y) + w->z);
15 00    # vload 0         # w
62 00    # aaddf 0         # &w->x
10 01    # bipush 1        # 1
4E       # imstore         # w->x = 1;
15 01    # vload 1         # i
15 00    # vload 0         # w
62 00    # aaddf 0         # &w->x
2E       # imload          # w->x
15 00    # vload 0         # w
62 04    # aaddf 4         # &w->y
2E       # imload          # w->y
60       # iadd            # (w->x + w->y)
15 00    # vload 0         # w
62 08    # aaddf 8         # &w->z
2E       # imload          # w->z
60       # iadd            # ((w->x + w->y) + w->z)
60       # iadd            # 
36 01    # vstore 1        # i += ((w->x + w->y) + w->z);
15 00    # vload 0         # w
62 04    # aaddf 4         # &w->y
10 02    # bipush 2        # 2
4E       # imstore         # w->y = 2;
15 01    # vload 1         # i
15 00    # vload 0         # w
62 00    # aaddf 0         # &w->x
2E       # imload          # w->x
15 00    # vload 0         # w
62 04    # aaddf 4         # &w->y
2E       # imload          # w->y
60       # iadd            # (w->x + w->y)
15 00    # vload 0         # w
62 08    # aaddf 8         # &w->z
2E       # imload          # w->z
60       # iadd            # ((w->x + w->y) + w->z)
60       # iadd            # 
36 01    # vstore 1        # i += ((w->x + w->y) + w->z);
15 00    # vload 0         # w
62 08    # aaddf 8         # &w->z
10 03    # bipush 3        # 3
4E       # imstore         # w->z = 3;
15 01    # vload 1         # i
15 00    # vload 0         # w
62 00    # aaddf 0         # &w->x
2E       # imload          # w->x
15 00    # vload 0         # w
62 04    # aaddf 4         # &w->y
2E       # imload          # w->y
60       # iadd            # (w->x + w->y)
15 00    # vload 0         # w
62 08    # aaddf 8         # &w->z
2E       # imload          # w->z
60       # iadd            # ((w->x + w->y) + w->z)
60       # iadd            # 
36 01    # vstore 1        # i += ((w->x + w->y) + w->z);
15 01    # vload 1         # i
B0       # return          # 

00 00             # native count
# native pool

