C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 00             # string pool total size
# string pool

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 02             # number of local variables = 2
00 5D             # code length = 93 bytes
10 0A    # bipush 10       # 10
BC 01    # newarray 1      # alloc_array(char, 10)
36 00    # vstore 0        # A = alloc_array(char, 10);
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
10 41    # bipush 65       # 'A'
55       # cmstore         # A[0] = 'A';
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
10 42    # bipush 66       # 'B'
55       # cmstore         # A[1] = 'B';
15 00    # vload 0         # A
B7 00 00 # invokenative 0  # string_from_chararray(A)
36 01    # vstore 1        # B = string_from_chararray(A);
15 01    # vload 1         # B
10 01    # bipush 1        # 1
B7 00 01 # invokenative 1  # string_charat(B, 1)
10 42    # bipush 66       # 'B'
A0 00 06 # if_cmpne +6     # if (string_charat(B, 1) != 'B') goto <00:then>
A7 00 09 # goto +9         # goto <01:else>
# <00:then>
10 01    # bipush 1        # 1
B0       # return          # 
A7 00 03 # goto +3         # goto <02:endif>
# <01:else>
# <02:endif>
15 01    # vload 1         # B
10 00    # bipush 0        # 0
B7 00 01 # invokenative 1  # string_charat(B, 0)
10 41    # bipush 65       # 'A'
A0 00 06 # if_cmpne +6     # if (string_charat(B, 0) != 'A') goto <03:then>
A7 00 09 # goto +9         # goto <04:else>
# <03:then>
10 02    # bipush 2        # 2
B0       # return          # 
A7 00 03 # goto +3         # goto <05:endif>
# <04:else>
# <05:endif>
15 01    # vload 1         # B
B7 00 02 # invokenative 2  # string_length(B)
10 02    # bipush 2        # 2
A0 00 06 # if_cmpne +6     # if (string_length(B) != 2) goto <06:then>
A7 00 09 # goto +9         # goto <07:else>
# <06:then>
10 03    # bipush 3        # 3
B0       # return          # 
A7 00 03 # goto +3         # goto <08:endif>
# <07:else>
# <08:endif>
10 00    # bipush 0        # 0
B0       # return          # 

00 03             # native count
# native pool
00 01 00 60       # string_from_chararray
00 02 00 5D       # string_charat
00 01 00 65       # string_length

