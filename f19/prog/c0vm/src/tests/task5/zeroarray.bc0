C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 00             # string pool total size
# string pool

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 02             # number of local variables = 2
00 82             # code length = 130 bytes
10 03    # bipush 3        # 3
BC 04    # newarray 4      # alloc_array(int, 3)
36 00    # vstore 0        # A = alloc_array(int, 3);
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
2E       # imload          # A[0]
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
2E       # imload          # A[1]
60       # iadd            # (A[0] + A[1])
15 00    # vload 0         # A
10 02    # bipush 2        # 2
63       # aadds           # &A[2]
2E       # imload          # A[2]
60       # iadd            # ((A[0] + A[1]) + A[2])
36 01    # vstore 1        # i = ((A[0] + A[1]) + A[2]);
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
10 01    # bipush 1        # 1
4E       # imstore         # A[0] = 1;
15 01    # vload 1         # i
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
2E       # imload          # A[0]
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
2E       # imload          # A[1]
60       # iadd            # (A[0] + A[1])
15 00    # vload 0         # A
10 02    # bipush 2        # 2
63       # aadds           # &A[2]
2E       # imload          # A[2]
60       # iadd            # ((A[0] + A[1]) + A[2])
60       # iadd            # 
36 01    # vstore 1        # i += ((A[0] + A[1]) + A[2]);
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
10 02    # bipush 2        # 2
4E       # imstore         # A[1] = 2;
15 01    # vload 1         # i
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
2E       # imload          # A[0]
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
2E       # imload          # A[1]
60       # iadd            # (A[0] + A[1])
15 00    # vload 0         # A
10 02    # bipush 2        # 2
63       # aadds           # &A[2]
2E       # imload          # A[2]
60       # iadd            # ((A[0] + A[1]) + A[2])
60       # iadd            # 
36 01    # vstore 1        # i += ((A[0] + A[1]) + A[2]);
15 00    # vload 0         # A
10 02    # bipush 2        # 2
63       # aadds           # &A[2]
10 03    # bipush 3        # 3
4E       # imstore         # A[2] = 3;
15 01    # vload 1         # i
15 00    # vload 0         # A
10 00    # bipush 0        # 0
63       # aadds           # &A[0]
2E       # imload          # A[0]
15 00    # vload 0         # A
10 01    # bipush 1        # 1
63       # aadds           # &A[1]
2E       # imload          # A[1]
60       # iadd            # (A[0] + A[1])
15 00    # vload 0         # A
10 02    # bipush 2        # 2
63       # aadds           # &A[2]
2E       # imload          # A[2]
60       # iadd            # ((A[0] + A[1]) + A[2])
60       # iadd            # 
36 01    # vstore 1        # i += ((A[0] + A[1]) + A[2]);
15 01    # vload 1         # i
B0       # return          # 

00 00             # native count
# native pool

