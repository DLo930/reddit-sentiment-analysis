C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 A8             # string pool total size
# string pool
30 31 32 33 34 35 36 37 38 39 41 00  # "0123456789A"
30 31 32 33 34 35 36 37 38 39 42 00  # "0123456789B"
30 31 32 33 34 35 36 37 38 39 43 00  # "0123456789C"
30 31 32 33 34 35 36 37 38 39 44 00  # "0123456789D"
30 31 32 33 34 35 36 37 38 39 45 00  # "0123456789E"
30 31 32 33 34 35 36 37 38 39 46 00  # "0123456789F"
30 31 32 33 34 35 36 37 38 39 47 00  # "0123456789G"
30 31 32 33 34 35 36 37 38 39 48 00  # "0123456789H"
30 31 32 33 34 35 36 37 38 39 49 00  # "0123456789I"
30 31 32 33 34 35 36 37 38 39 4A 00  # "0123456789J"
30 31 32 33 34 35 36 37 38 39 4B 00  # "0123456789K"
30 31 32 33 34 35 36 37 38 39 4C 00  # "0123456789L"
30 31 32 33 34 35 36 37 38 39 4D 00  # "0123456789M"
30 31 32 33 34 35 36 37 38 39 4E 00  # "0123456789N"

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 0E             # number of local variables = 14
00 5E             # code length = 94 bytes
14 00 00 # aldc 0          # s[0] = "0123456789A"
36 00    # vstore 0        # a0 = "0123456789A";
14 00 0C # aldc 12         # s[12] = "0123456789B"
36 01    # vstore 1        # a1 = "0123456789B";
14 00 18 # aldc 24         # s[24] = "0123456789C"
36 02    # vstore 2        # a2 = "0123456789C";
14 00 24 # aldc 36         # s[36] = "0123456789D"
36 03    # vstore 3        # a3 = "0123456789D";
14 00 30 # aldc 48         # s[48] = "0123456789E"
36 04    # vstore 4        # a4 = "0123456789E";
14 00 3C # aldc 60         # s[60] = "0123456789F"
36 05    # vstore 5        # a5 = "0123456789F";
14 00 48 # aldc 72         # s[72] = "0123456789G"
36 06    # vstore 6        # a6 = "0123456789G";
14 00 54 # aldc 84         # s[84] = "0123456789H"
36 07    # vstore 7        # a7 = "0123456789H";
14 00 60 # aldc 96         # s[96] = "0123456789I"
36 08    # vstore 8        # a8 = "0123456789I";
14 00 6C # aldc 108        # s[108] = "0123456789J"
36 09    # vstore 9        # a9 = "0123456789J";
14 00 78 # aldc 120        # s[120] = "0123456789K"
36 0A    # vstore 10       # a10 = "0123456789K";
14 00 84 # aldc 132        # s[132] = "0123456789L"
36 0B    # vstore 11       # a11 = "0123456789L";
14 00 90 # aldc 144        # s[144] = "0123456789M"
36 0C    # vstore 12       # a12 = "0123456789M";
14 00 9C # aldc 156        # s[156] = "0123456789N"
36 0D    # vstore 13       # a13 = "0123456789N";
15 0D    # vload 13        # a13
10 0A    # bipush 10       # 10
B7 00 00 # invokenative 0  # string_charat(a13, 10)
10 4E    # bipush 78       # 'N'
A0 00 06 # if_cmpne +6     # if (string_charat(a13, 10) != 'N') goto <00:then>
A7 00 09 # goto +9         # goto <01:else>
# <00:then>
10 01    # bipush 1        # 1
B0       # return          # 
A7 00 03 # goto +3         # goto <02:endif>
# <01:else>
# <02:endif>
10 00    # bipush 0        # 0
B0       # return          # 

00 01             # native count
# native pool
00 02 00 5D       # string_charat

