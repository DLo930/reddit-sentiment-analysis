

// Standard-constructed buffers
bool test_okbuf(tbuf* B, int row, int col) {
  editor* E = alloc(editor);
  E->buffer = B;
  E->row = row;
  E->col = col;
  return is_editor(E);
}

// Ill-formed buffers due to NULLs)
bool test_badbuf(tbuf* B, int row, int col) {
  editor* E = alloc(editor);
  dll* p = B->cursor->prev;
  B->cursor->prev = NULL;
  E->buffer = B;
  E->row = row;
  E->col = col;
  if (is_editor(E)) return false;
  B->cursor->prev = p;

  B->cursor->next = NULL;
  if (B->cursor != B->end && is_editor(E)) return false;

  return true;
}

// Ill-formed buffers due to row/col
bool test_badrowcol(tbuf* B, int row, int col) {
  editor* E = alloc(editor);
  E->buffer = B;
  E->row = row + 1;
  E->col = col;
  if (is_editor(E)) return false;

  E->row = row - 1;
  if (is_editor(E)) return false;

  E->row = row;
  E->col = col + 1;
  if (is_editor(E)) return false;
  E->col = col - 1;
  if (is_editor(E)) return false;
  return true;
}

int main() {
  args_t args = args_parse();
  if (args->argc != 1) error("Wrong number of args");
  string arg = args->argv[0];

  editor* E = alloc(editor);
  E->buffer = construct(4, 2, 1);
  E->row = 2;
  E->col = 1;

  if (string_equal(arg, "ok")) {
    if (!is_editor(E)) return 1;
    if (!exhaustively_test(0, 10, &test_okbuf)) return 1;

  } else if (string_equal(arg, "badbuf")) {
    if (is_editor(NULL)) return 1;
    if (is_editor(alloc(editor))) return 1;
    if (!exhaustively_test(0, 8, &test_badbuf)) return 1;

  } else if (string_equal(arg, "badrowcol")) {
    if (!exhaustively_test(0, 8, &test_badrowcol)) return 1;

  } else {
    error("Bad arg");

  }

  return 0;
}