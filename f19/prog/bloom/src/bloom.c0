/*
 * Bloom filters
 *
 * 15-122 Principles of Imperative Computation */

/************************ Implementation ***********************/

int* bloom_new(int table_size) { return alloc(int); }
int bloom_size(int* B) { return *B; }
bool bloom_contains(int* B, string x) { return true; }
void bloom_add(int* B, string x) { *B += 1; }

// Client type
typedef int* bloom_t;


/*********************** Interface to bloom filters ***********************/

// typedef ______* bloom_t;

bloom_t bloom_new(int table_size)
  /*@requires table_size > 0; @*/
  /*@ensures \result != NULL; @*/ ;

// May incorrectly return "true!"
bool bloom_contains(bloom_t B, string x)
  /*@requires B != NULL; @*/ ;

void bloom_add(bloom_t B, string x)
  /*@requires B != NULL; @*/
  /*@ensures bloom_contains(B, x); @*/ ;
