#use <args>
#use <conio>
#use <util>
#use <rand>
#use <string>

/*
// 1 point - the test in the handout
// 1 point - a very long array (runs)
// .5 point - a very long array (stable)
// 1 point - many many tests (works)
// .5 point - many many tests (stable)

bool is_stable_sorted(int[] A, string[] B, int len)
//@requires len == \length(A) && len == \length(B);
{
  for (int i = 1; i < len; i++) 
  //@loop_invariant 1 <= i;
  {
    if (A[i-1] > A[i]) {
      print("Array indices out of order: A["); printint(i-1); print("] = ");
      printint(A[i-1]); print(", A["); printint(i); print("] = ");
      printint(A[i]); println("");
      return false;
    }
    if (A[i-1] == A[i] && string_compare(B[i-1], B[i]) > 0) {
      print("Not stable at index "); printint(i); println("");
      return false;
    }
  }
  return true;
}

bool manytests() {
  int len;
  int[] test_array = alloc_array(int);
  int num_sorted_arrays = (1 << len) - 1;
  for (int i = 0; i < num_sorted_arrays; i++) {
    test_array[0] = 0;
    for (int j = 1; j < len; j++) 
    
  }
}

int factorial(int x) 
//@requires x > 0;
{
  int a = 1;
  while (x > 0) { a *= x; x--; }
  return a;
}

*/


int main() {
  args_t args = args_parse();
  if (args->argc != 1) error("Wrong number of args");
  string arg = args->argv[0];
  
  // Example frequency/vocab from the handout
  int[] example_freq = alloc_array(int, 8);
  example_freq[0] = 2;
  example_freq[1] = 15;
  example_freq[2] = 1;
  example_freq[3] = 1;
  example_freq[4] = 2;
  example_freq[5] = 5;
  example_freq[6] = 2;
  example_freq[7] = 2;

  string[] example_vocab = alloc_array(string, 8);
  example_vocab[0] = "burrow";
  example_vocab[1] = "ha";
  example_vocab[2] = "his";
  example_vocab[3] = "is";
  example_vocab[4] = "list";
  example_vocab[5] = "of";
  example_vocab[6] = "out";
  example_vocab[7] = "winter";

  if (string_equal(arg, "example-in-handout")) {
    sort_by_freq(example_vocab, example_freq, 8);
    if (example_freq[0] != 1) return 1;
    if (example_freq[1] != 1) return 1;
    if (example_freq[2] != 2) return 1;
    if (example_freq[3] != 2) return 1;
    if (example_freq[4] != 2) return 1;
    if (example_freq[5] != 2) return 1;
    if (example_freq[6] != 5) return 1;
    if (example_freq[7] != 15) return 1;
    if (!string_equal(example_vocab[0],"his")) return 1;
    if (!string_equal(example_vocab[1],"is")) return 1;
    if (!string_equal(example_vocab[2],"burrow")) return 1;
    if (!string_equal(example_vocab[3],"list")) return 1;
    if (!string_equal(example_vocab[4],"out")) return 1;
    if (!string_equal(example_vocab[5],"winter")) return 1;
    if (!string_equal(example_vocab[6],"of")) return 1;
    if (!string_equal(example_vocab[7],"ha")) return 1;

  } else if (string_equal(arg, "unsorted-vocab")) {
    example_vocab[0] = "xyzzy";
    example_vocab[2] = "xyzze";
    example_vocab[7] = "aardvark";

    sort_by_freq(example_vocab, example_freq, 8);
    if (example_freq[0] != 1) return 1;
    if (example_freq[1] != 1) return 1;
    if (example_freq[2] != 2) return 1;
    if (example_freq[3] != 2) return 1;
    if (example_freq[4] != 2) return 1;
    if (example_freq[5] != 2) return 1;
    if (example_freq[6] != 5) return 1;
    if (example_freq[7] != 15) return 1;
    if (!string_equal(example_vocab[0],"xyzze")) return 1;
    if (!string_equal(example_vocab[1],"is")) return 1;
    if (!string_equal(example_vocab[2],"xyzzy")) return 1;
    if (!string_equal(example_vocab[3],"list")) return 1;
    if (!string_equal(example_vocab[4],"out")) return 1;
    if (!string_equal(example_vocab[5],"aardvark")) return 1;
    if (!string_equal(example_vocab[6],"of")) return 1;
    if (!string_equal(example_vocab[7],"ha")) return 1;

  } else if (string_equal(arg, "ex-forward")) {
    for (int i = 0; i < 8; i++) example_freq[i] = i;
    sort_by_freq(example_vocab, example_freq, 8);
    if (!string_equal(example_vocab[0],"burrow")) return 1;
    if (!string_equal(example_vocab[1],"ha")) return 1;
    if (!string_equal(example_vocab[2],"his")) return 1;
    if (!string_equal(example_vocab[3],"is")) return 1;
    if (!string_equal(example_vocab[4],"list")) return 1;
    if (!string_equal(example_vocab[5],"of")) return 1;
    if (!string_equal(example_vocab[6],"out")) return 1;
    if (!string_equal(example_vocab[7],"winter")) return 1;

  } else if (string_equal(arg, "ex-backwards")) {
    for (int i = 0; i < 8; i++) example_freq[i] = 10 - i;
    sort_by_freq(example_vocab, example_freq, 8);
    if (!string_equal(example_vocab[7],"burrow")) return 1;
    if (!string_equal(example_vocab[6],"ha")) return 1;
    if (!string_equal(example_vocab[5],"his")) return 1;
    if (!string_equal(example_vocab[4],"is")) return 1;
    if (!string_equal(example_vocab[3],"list")) return 1;
    if (!string_equal(example_vocab[2],"of")) return 1;
    if (!string_equal(example_vocab[1],"out")) return 1;
    if (!string_equal(example_vocab[0],"winter")) return 1;

  } else if (string_equal(arg, "ex-split")) {
    for (int i = 0; i < 8; i++) example_freq[i] = (5 + i) % 8;
    sort_by_freq(example_vocab, example_freq, 8);
    if (!string_equal(example_vocab[5],"burrow")) return 1;
    if (!string_equal(example_vocab[6],"ha")) return 1;
    if (!string_equal(example_vocab[7],"his")) return 1;
    if (!string_equal(example_vocab[0],"is")) return 1;
    if (!string_equal(example_vocab[1],"list")) return 1;
    if (!string_equal(example_vocab[2],"of")) return 1;
    if (!string_equal(example_vocab[3],"out")) return 1;
    if (!string_equal(example_vocab[4],"winter")) return 1;

  } else if (string_equal(arg, "ex-stride")) {
    for (int i = 0; i < 8; i++) example_freq[i] = (i * 5) % 8;
    sort_by_freq(example_vocab, example_freq, 8);
    if (!string_equal(example_vocab[0],"burrow")) return 1;
    if (!string_equal(example_vocab[5],"ha")) return 1;
    if (!string_equal(example_vocab[2],"his")) return 1;
    if (!string_equal(example_vocab[7],"is")) return 1;
    if (!string_equal(example_vocab[4],"list")) return 1;
    if (!string_equal(example_vocab[1],"of")) return 1;
    if (!string_equal(example_vocab[6],"out")) return 1;
    if (!string_equal(example_vocab[3],"winter")) return 1;

  } else if (string_equal(arg, "ex-negated")) {
    for (int i = 0; i < 8; i++) example_freq[i] = -example_freq[i];
    sort_by_freq(example_vocab, example_freq, 8);

    if (!string_equal(example_vocab[6],"his")) return 1;
    if (!string_equal(example_vocab[7],"is")) return 1;
    if (!string_equal(example_vocab[2],"burrow")) return 1;
    if (!string_equal(example_vocab[3],"list")) return 1;
    if (!string_equal(example_vocab[4],"out")) return 1;
    if (!string_equal(example_vocab[5],"winter")) return 1;
    if (!string_equal(example_vocab[1],"of")) return 1;
    if (!string_equal(example_vocab[0],"ha")) return 1;

  } else if (string_equal(arg, "ex-zeroes")) {
    for (int i = 0; i < 8; i++) example_freq[i] = 0;
    sort_by_freq(example_vocab, example_freq, 8);
    if (!string_equal(example_vocab[0],"burrow")) return 1;
    if (!string_equal(example_vocab[1],"ha")) return 1;
    if (!string_equal(example_vocab[2],"his")) return 1;
    if (!string_equal(example_vocab[3],"is")) return 1;
    if (!string_equal(example_vocab[4],"list")) return 1;
    if (!string_equal(example_vocab[5],"of")) return 1;
    if (!string_equal(example_vocab[6],"out")) return 1;
    if (!string_equal(example_vocab[7],"winter")) return 1;

  } else if (string_equal(arg, "shorties")) {
    int[] A0 = alloc_array(int, 0);
    int[] A1 = alloc_array(int, 1); A1[0] = 5;
    int[] A2 = alloc_array(int, 2); A2[0] = 5; A2[1] = 7;
    string[] S0 = alloc_array(string, 0);
    string[] S1 = alloc_array(string, 1); S1[0] = "A";
    string[] S2 = alloc_array(string, 2); S2[0] = "A"; S2[1] = "B";

    sort_by_freq(S0, A0, 0);

    sort_by_freq(S1, A1, 1);
    if (A1[0] != 5) return 1;
    if (!string_equal(S1[0], "A")) return 1;
    
    sort_by_freq(S2, A2, 2);
    if (A2[0] != 5) return 1;
    if (A2[1] != 7) return 1;
    if (!string_equal(S2[0], "A")) return 1;
    if (!string_equal(S2[1], "B")) return 1;

    A2[0] = 7;
    sort_by_freq(S2, A2, 2);
    if (A2[0] != 7) return 1;
    if (A2[1] != 7) return 1;
    if (!string_equal(S2[0], "A")) return 1;
    if (!string_equal(S2[1], "B")) return 1;

    A2[1] = 5;
    sort_by_freq(S2, A2, 2);
    if (A2[0] != 5) return 1;
    if (A2[1] != 7) return 1;
    if (!string_equal(S2[0], "B")) return 1;
    if (!string_equal(S2[1], "A")) return 1;

  } else if (string_equal(arg, "longarray-generate-code")) {
    bundle_t sb = read_words("texts/news_vocab_sorted.txt");
    int len = 500000;
    string[] vocab = alloc_array(string, len);
    int[] freq = alloc_array(int, len);
    printint(len); println(" length");

    rand_t r = init_rand(0xC0C0FFEE);
    int modder = len/4;
    for (int i = 0; i < len; i++) { 
      vocab[i] = int2hex(i);
      freq[i] = abs(rand(r) % modder);
    }

    sort_by_freq(vocab, freq, len);

    for (int i = 0; i < 100; i++) {
      print("    if (!string_equal(vocab["); printint(i); print("], \""); print(vocab[i]); print("\")) return 1; /* Frequency "); printint(freq[i]); println(" */");
    }

    for (int i = len - 100; i < len; i++) {
      print("    if (!string_equal(vocab["); printint(i); print("], \""); print(vocab[i]); print("\")) return 1; /* Freq: "); printint(freq[i]); println(" */");
    }

  } else if (string_equal(arg, "longarray-randomtest")) {
    bundle_t sb = read_words("texts/news_vocab_sorted.txt");
    int len = 500000;
    string[] vocab = alloc_array(string, len);
    int[] freq = alloc_array(int, len);
    printint(len); println(" length");

    rand_t r = init_rand(0xC0C0FFEE);
    int modder = len/4;
    for (int i = 0; i < len; i++) { 
      vocab[i] = int2hex(i);
      freq[i] = abs(rand(r) % modder);
    }

    sort_by_freq(vocab, freq, len);

    if (!string_equal(vocab[0], "00011889")) return 1; /* Frequency 0 */
    if (!string_equal(vocab[1], "0002AD21")) return 1; /* Frequency 0 */
    if (!string_equal(vocab[2], "000593E9")) return 1; /* Frequency 0 */
    if (!string_equal(vocab[3], "00062B79")) return 1; /* Frequency 0 */
    if (!string_equal(vocab[4], "00052444")) return 1; /* Frequency 1 */
    if (!string_equal(vocab[5], "0003AD03")) return 1; /* Frequency 2 */
    if (!string_equal(vocab[6], "0000DFAD")) return 1; /* Frequency 4 */
    if (!string_equal(vocab[7], "0001695D")) return 1; /* Frequency 4 */
    if (!string_equal(vocab[8], "00018C15")) return 1; /* Frequency 4 */
    if (!string_equal(vocab[9], "000452DD")) return 1; /* Frequency 4 */
    if (!string_equal(vocab[10], "00060E85")) return 1; /* Frequency 4 */
    if (!string_equal(vocab[11], "0001770F")) return 1; /* Frequency 6 */
    if (!string_equal(vocab[12], "00020FC3")) return 1; /* Frequency 6 */
    if (!string_equal(vocab[13], "00029D13")) return 1; /* Frequency 6 */
    if (!string_equal(vocab[14], "00058CDF")) return 1; /* Frequency 6 */
    if (!string_equal(vocab[15], "00028E1A")) return 1; /* Frequency 7 */
    if (!string_equal(vocab[16], "00047132")) return 1; /* Frequency 7 */
    if (!string_equal(vocab[17], "00047BBC")) return 1; /* Frequency 7 */
    if (!string_equal(vocab[18], "0000AAB9")) return 1; /* Frequency 8 */
    if (!string_equal(vocab[19], "0001D981")) return 1; /* Frequency 8 */
    if (!string_equal(vocab[20], "00066401")) return 1; /* Frequency 8 */
    if (!string_equal(vocab[21], "0000CFEC")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[22], "000366AA")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[23], "0004101C")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[24], "0005AC1C")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[25], "0006B982")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[26], "0006DDBC")) return 1; /* Frequency 9 */
    if (!string_equal(vocab[27], "00006E5F")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[28], "00012383")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[29], "00029E6F")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[30], "000311AB")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[31], "0004644B")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[32], "000597A7")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[33], "00067203")) return 1; /* Frequency 10 */
    if (!string_equal(vocab[34], "000001DD")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[35], "0001893D")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[36], "0001E1F5")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[37], "000359BD")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[38], "00044995")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[39], "0006005D")) return 1; /* Frequency 12 */
    if (!string_equal(vocab[40], "0000E280")) return 1; /* Frequency 13 */
    if (!string_equal(vocab[41], "00037AE6")) return 1; /* Frequency 13 */
    if (!string_equal(vocab[42], "000519BE")) return 1; /* Frequency 13 */
    if (!string_equal(vocab[43], "0005E980")) return 1; /* Frequency 13 */
    if (!string_equal(vocab[44], "00028637")) return 1; /* Frequency 14 */
    if (!string_equal(vocab[45], "0002D1F7")) return 1; /* Frequency 14 */
    if (!string_equal(vocab[46], "00033EDC")) return 1; /* Frequency 15 */
    if (!string_equal(vocab[47], "00039542")) return 1; /* Frequency 15 */
    if (!string_equal(vocab[48], "000589EA")) return 1; /* Frequency 15 */
    if (!string_equal(vocab[49], "00020BD1")) return 1; /* Frequency 16 */
    if (!string_equal(vocab[50], "00052211")) return 1; /* Frequency 16 */
    if (!string_equal(vocab[51], "00070B51")) return 1; /* Frequency 16 */
    if (!string_equal(vocab[52], "00017264")) return 1; /* Frequency 17 */
    if (!string_equal(vocab[53], "000383D2")) return 1; /* Frequency 17 */
    if (!string_equal(vocab[54], "0005957A")) return 1; /* Frequency 17 */
    if (!string_equal(vocab[55], "0000CEB3")) return 1; /* Frequency 18 */
    if (!string_equal(vocab[56], "00056953")) return 1; /* Frequency 18 */
    if (!string_equal(vocab[57], "0005E483")) return 1; /* Frequency 18 */
    if (!string_equal(vocab[58], "000171EE")) return 1; /* Frequency 19 */
    if (!string_equal(vocab[59], "0003B4D0")) return 1; /* Frequency 19 */
    if (!string_equal(vocab[60], "000682C6")) return 1; /* Frequency 19 */
    if (!string_equal(vocab[61], "00031255")) return 1; /* Frequency 20 */
    if (!string_equal(vocab[62], "000346ED")) return 1; /* Frequency 20 */
    if (!string_equal(vocab[63], "0005212D")) return 1; /* Frequency 20 */
    if (!string_equal(vocab[64], "00057D3D")) return 1; /* Frequency 20 */
    if (!string_equal(vocab[65], "000634C5")) return 1; /* Frequency 20 */
    if (!string_equal(vocab[66], "0000A380")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[67], "00012CCE")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[68], "0002DDC0")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[69], "000440C6")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[70], "00044368")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[71], "00046C98")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[72], "0005C236")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[73], "00077E76")) return 1; /* Frequency 21 */
    if (!string_equal(vocab[74], "0004C12F")) return 1; /* Frequency 22 */
    if (!string_equal(vocab[75], "0004E447")) return 1; /* Frequency 22 */
    if (!string_equal(vocab[76], "00055683")) return 1; /* Frequency 22 */
    if (!string_equal(vocab[77], "00055A03")) return 1; /* Frequency 22 */
    if (!string_equal(vocab[78], "0006369F")) return 1; /* Frequency 22 */
    if (!string_equal(vocab[79], "0001525C")) return 1; /* Frequency 23 */
    if (!string_equal(vocab[80], "0002E2C4")) return 1; /* Frequency 23 */
    if (!string_equal(vocab[81], "00053064")) return 1; /* Frequency 23 */
    if (!string_equal(vocab[82], "00002069")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[83], "0000D3D1")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[84], "000185B9")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[85], "0002C039")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[86], "000322C9")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[87], "00044D11")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[88], "0004B891")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[89], "00073E49")) return 1; /* Frequency 24 */
    if (!string_equal(vocab[90], "0002AFDA")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[91], "000372EA")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[92], "00040EB2")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[93], "00043E8C")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[94], "000518D2")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[95], "00067BC4")) return 1; /* Frequency 25 */
    if (!string_equal(vocab[96], "0004D8DB")) return 1; /* Frequency 26 */
    if (!string_equal(vocab[97], "00003568")) return 1; /* Frequency 27 */
    if (!string_equal(vocab[98], "00006108")) return 1; /* Frequency 27 */
    if (!string_equal(vocab[99], "0000EEDE")) return 1; /* Frequency 27 */
    if (!string_equal(vocab[499900], "0005BE94")) return 1; /* Freq: 124975 */
    if (!string_equal(vocab[499901], "000605D2")) return 1; /* Freq: 124975 */
    if (!string_equal(vocab[499902], "0000CC79")) return 1; /* Freq: 124976 */
    if (!string_equal(vocab[499903], "000186F1")) return 1; /* Freq: 124976 */
    if (!string_equal(vocab[499904], "00008BEC")) return 1; /* Freq: 124977 */
    if (!string_equal(vocab[499905], "00040C9C")) return 1; /* Freq: 124977 */
    if (!string_equal(vocab[499906], "0000574F")) return 1; /* Freq: 124978 */
    if (!string_equal(vocab[499907], "0002F4DF")) return 1; /* Freq: 124978 */
    if (!string_equal(vocab[499908], "000796FB")) return 1; /* Freq: 124978 */
    if (!string_equal(vocab[499909], "00054956")) return 1; /* Freq: 124979 */
    if (!string_equal(vocab[499910], "0005F628")) return 1; /* Freq: 124979 */
    if (!string_equal(vocab[499911], "00068D10")) return 1; /* Freq: 124979 */
    if (!string_equal(vocab[499912], "0002AAED")) return 1; /* Freq: 124980 */
    if (!string_equal(vocab[499913], "00063C65")) return 1; /* Freq: 124980 */
    if (!string_equal(vocab[499914], "00071695")) return 1; /* Freq: 124980 */
    if (!string_equal(vocab[499915], "00077B15")) return 1; /* Freq: 124980 */
    if (!string_equal(vocab[499916], "0000A6A6")) return 1; /* Freq: 124981 */
    if (!string_equal(vocab[499917], "0001FF5E")) return 1; /* Freq: 124981 */
    if (!string_equal(vocab[499918], "00029A00")) return 1; /* Freq: 124981 */
    if (!string_equal(vocab[499919], "00074B16")) return 1; /* Freq: 124981 */
    if (!string_equal(vocab[499920], "000085BF")) return 1; /* Freq: 124982 */
    if (!string_equal(vocab[499921], "0000E943")) return 1; /* Freq: 124982 */
    if (!string_equal(vocab[499922], "000475BF")) return 1; /* Freq: 124982 */
    if (!string_equal(vocab[499923], "0005140B")) return 1; /* Freq: 124982 */
    if (!string_equal(vocab[499924], "0005FD7B")) return 1; /* Freq: 124982 */
    if (!string_equal(vocab[499925], "00007FAC")) return 1; /* Freq: 124983 */
    if (!string_equal(vocab[499926], "00027A24")) return 1; /* Freq: 124983 */
    if (!string_equal(vocab[499927], "00076BD2")) return 1; /* Freq: 124983 */
    if (!string_equal(vocab[499928], "00045F89")) return 1; /* Freq: 124984 */
    if (!string_equal(vocab[499929], "00061069")) return 1; /* Freq: 124984 */
    if (!string_equal(vocab[499930], "00071ED9")) return 1; /* Freq: 124984 */
    if (!string_equal(vocab[499931], "0004170A")) return 1; /* Freq: 124985 */
    if (!string_equal(vocab[499932], "000701C2")) return 1; /* Freq: 124985 */
    if (!string_equal(vocab[499933], "00078FB4")) return 1; /* Freq: 124985 */
    if (!string_equal(vocab[499934], "0004E753")) return 1; /* Freq: 124986 */
    if (!string_equal(vocab[499935], "00003AA8")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499936], "000080C6")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499937], "000233B0")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499938], "00055CB8")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499939], "00071396")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499940], "0007A008")) return 1; /* Freq: 124987 */
    if (!string_equal(vocab[499941], "0003C925")) return 1; /* Freq: 124988 */
    if (!string_equal(vocab[499942], "0004055D")) return 1; /* Freq: 124988 */
    if (!string_equal(vocab[499943], "00060CED")) return 1; /* Freq: 124988 */
    if (!string_equal(vocab[499944], "0000BB68")) return 1; /* Freq: 124989 */
    if (!string_equal(vocab[499945], "000159A8")) return 1; /* Freq: 124989 */
    if (!string_equal(vocab[499946], "000286F8")) return 1; /* Freq: 124989 */
    if (!string_equal(vocab[499947], "0001DAFF")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499948], "0002565F")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499949], "0002759F")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499950], "0002900F")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499951], "00045FA3")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499952], "0007A0AB")) return 1; /* Freq: 124990 */
    if (!string_equal(vocab[499953], "00014C74")) return 1; /* Freq: 124991 */
    if (!string_equal(vocab[499954], "0001DC3A")) return 1; /* Freq: 124991 */
    if (!string_equal(vocab[499955], "0003133A")) return 1; /* Freq: 124991 */
    if (!string_equal(vocab[499956], "00060DB2")) return 1; /* Freq: 124991 */
    if (!string_equal(vocab[499957], "00069D34")) return 1; /* Freq: 124991 */
    if (!string_equal(vocab[499958], "00009969")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499959], "00009FB1")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499960], "00011CD9")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499961], "00059441")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499962], "00067209")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499963], "00070C61")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499964], "00073B01")) return 1; /* Freq: 124992 */
    if (!string_equal(vocab[499965], "000062B4")) return 1; /* Freq: 124993 */
    if (!string_equal(vocab[499966], "000524CC")) return 1; /* Freq: 124993 */
    if (!string_equal(vocab[499967], "0006234A")) return 1; /* Freq: 124993 */
    if (!string_equal(vocab[499968], "0006CA0A")) return 1; /* Freq: 124993 */
    if (!string_equal(vocab[499969], "0000784B")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499970], "0001CDDB")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499971], "0002225B")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499972], "0002381F")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499973], "0004FDCB")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499974], "00063F8B")) return 1; /* Freq: 124994 */
    if (!string_equal(vocab[499975], "00003CF8")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499976], "0000B4A6")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499977], "0000B980")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499978], "00028490")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499979], "0006B36E")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499980], "0006BBF0")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499981], "00075D28")) return 1; /* Freq: 124995 */
    if (!string_equal(vocab[499982], "0000A335")) return 1; /* Freq: 124996 */
    if (!string_equal(vocab[499983], "00051515")) return 1; /* Freq: 124996 */
    if (!string_equal(vocab[499984], "0006C31D")) return 1; /* Freq: 124996 */
    if (!string_equal(vocab[499985], "000748E5")) return 1; /* Freq: 124996 */
    if (!string_equal(vocab[499986], "00014FBE")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499987], "00017928")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499988], "0002A50E")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499989], "00031B76")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499990], "0004B19E")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499991], "00052FD8")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499992], "0005E4D6")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499993], "00062E28")) return 1; /* Freq: 124997 */
    if (!string_equal(vocab[499994], "00041AC7")) return 1; /* Freq: 124998 */
    if (!string_equal(vocab[499995], "0004CA7F")) return 1; /* Freq: 124998 */
    if (!string_equal(vocab[499996], "00078BE7")) return 1; /* Freq: 124998 */
    if (!string_equal(vocab[499997], "0006BA32")) return 1; /* Freq: 124999 */
    if (!string_equal(vocab[499998], "0006C834")) return 1; /* Freq: 124999 */
    if (!string_equal(vocab[499999], "000766CA")) return 1; /* Freq: 124999 */
        
  } else {
    error("Bad argument");
  }

  return 0;
}