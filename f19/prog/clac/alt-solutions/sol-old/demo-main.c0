/*
 * Clac, interface to a stack-based calculator language
 *
 * 15-122 Principles of Imperative Computation, Fall 2012
 * Frank Pfenning
 */

#use <string>
#use <parse>
#use <conio>
#use <args>

#use "lib/queues_string.c0"
#use "lib/stacks_int.c0"
#use "lib/tokenize.c0"

int main() {
  queue Q = queue_new();	/* input queue; see lib/queues_string.c0 */
  stack S = stack_new();	/* operand stack; see lib/stacks_int.c0 */
  print("Clac top level\n");
  bool cont = true;
  while (cont) {
    // If there is nothing to be done on the queue and more input, get input
    if (queue_empty(Q)) 
      if (!eof()) {
        print("clac demo>> ");
        flush();
        input_line(Q);
      }
    else return 0;

    bool * trace = alloc(bool);
    *trace = false;
    args_flag("-trace", trace);
    args_t a = args_parse();

    cont = eval(Q, S, *trace);
    //@assert cont == false || queue_empty(Q);
    if (!stack_empty(S)) {
      int x = pop(S);
      printint(x); print("\n");
      push(S, x);
    } else {
      print("(stack empty)\n");
    }
  }
  print("Bye!\n");
  return 0;
}
