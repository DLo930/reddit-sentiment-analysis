/*
 * Clac
 *
 * 15-122 Principles of Imperative Computation
 */

#use <string>
#use <parse>
#use <conio>

int test(queue_t Q, stack_t S, state_t ST) 
//@requires Q != NULL && S != NULL && ST != NULL;
{
  bool cont = eval(Q, S, ST);

  if (cont && !queue_empty(Q)) {
    return -128;
  }

  if (stack_empty(S)) {
    return -128;
  }

  int result = pop(S);
  if (!stack_empty(S)) {
    return -128;
  }

  return result;
}

int main() {
  /* pass file names on command line, no flags */
  /* these will be processed in order */
  args_t args = args_parse();
  int argc = args->argc;

  stack_t S = stack_new();
  queue_t Q = queue_new();
  state_t ST = init_state();

  int result = 0;

  for (int i = 0; i < argc; i++)
  //@loop_invariant 0 <= i;
  {
    string filename = args->argv[i];
    print("Loading file "); print(filename); print("\n");
    input_file(args->argv[i], Q);
    result = test(Q, S, ST);
  }

  return result;
}
