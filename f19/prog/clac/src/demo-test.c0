/*
 * Clac, interface to a stack-based calculator language
 *
 * 15-122 Principles of Imperative Computation
 * Frank Pfenning
 */

#use <string>
#use <parse>
#use <conio>

#use "lib/queues_string.c0"
#use "lib/stacks_int.c0"
#use "lib/tokenize.c0"

/* eval_string("...input...")
 * test if "...input..." evaluates to a single
 * value on the stack and return that value
 */
int eval_string(string s) {
  queue Q = queue_new();
  string2tokens(s, Q);		/* in lib/tokenize.c0 */
  stack S = stack_new();
  eval(Q, S);
  assert(queue_empty(Q));
  int result = pop(S);
  assert(stack_empty(S));
  return result;
}

int main() {
  assert(eval_string("-9") == -9);
  assert(eval_string("3 4 +") == 7);
  assert(eval_string("17 3 /") == 5);
  assert(eval_string("11 10 2 9 - + *") == 33);
  print("All tests passed!\n");
  return 0;
}
