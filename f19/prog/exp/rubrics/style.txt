15-122 Exp manual style grading instructions and rubric

We are grading style for exp.

################################################################################

*How To Grade Style*

1) Go the 15-122 shared documents (on Google Docs) and click on the entry entitled "Manual Grading". There, go to the 'Exp' tab. This will tell you which submissions you are responsible for.
2) Go to autolab.andrew.cmu.edu
3) Navigate to the 'Clac and EXP' Assignment
4) Click "Grade all submissions" under CA Options
5) It should be sorted already, but you can also click on "Email & Name" at the top to make it
   properly sorted a-z by Andrew ID
6) Click on the arrow next to a student's email, this will open a new tab
   a) on that tab, click on the magnifying glass next to file 'dict.c0' see below.
   b) If you are deducting points, make sure to leave a comment in their code. This can be done by
      mousing over the line numbers and clicking the green "+". For contracts, use the form below.
      For style points, make sure the comment starts with "FIXSTYLE:"
   c) enter an overall assessment (see below) on line 1
   d) If you deducted points, MAKE SURE YOU LEFT A COMMENT in their code.
   e) Go back to the Autolab page with all the submissions, and update the postconditions grade by
      clicking the "-" in the row of the person you were just grading (Do not release the grade when
      completed)
7) When you finish all your students, update the spreadsheet to reflect that


################################################################################

STYLE (negative grading, all-or-nothing: -15 or 0 points)

Be kind, be constructive, be complimentary: the point is to give general, constructive feedback but
also give people things to fix where necessary ("FIXSTYLE" issues).

If taking off points for style, be sure to leave a comment on the line with the prefix "FIXSTYLE"
so students know to fix those issues in order to receive points back.

We'll let students know when grades are released that in order to get these points back, they'll
need to fix their style and show a TA their updated code.

As you grade style, if a student's submission receives a negative score, copy and paste the
following message into the Autolab feedback box, including the lines marked (A), (B), or (C) as
necessary:

--------------------------------------------------------------------------------
You have 5 days to address the style issues in your code (if any) and show your fixes to a TA.  Look for TA comments starting with FIXSTYLE.

  (A) Definition and use of data structure invariants for dictionaries
  (B) Data structure invariants validate the chosen implementation
  (C) Improper indentation, line length, or other significant style violations
--------------------------------------------------------------------------------

We're looking for two sorts of things:

Category A (Use of data-structure invariants):
  a) Does is_dict or some data structure invariant checking function exist (which does more than check that D != NULL)?
  b) Does dict_new //@ensures their is_dict function?
  c) Does dict_lookup //@requires their is_dict function?

Category B (Implementation-specific):
What the is_dict function specifically does is dependent on the implementation. Only checks that are necessary to ensure SAFETY are required.
  a) If there are arrays, the data structure will inevitably have to store the array length. The data structure invariant should check that the stored length is the actual length of the array.
  b) If there are linked lists, there should be something like an is_segment function.

Category C (General style):
  a) Are there multiple instances of incorrect indentation?
  b) Are there multiple lines over 80 characters in length?
  c) Is there a significant amount of print statements or dead/commented out code?

This time, we are not deducting points for bad/missing loop invariants (e.g., making sure that segments are valid, that arrays are in bounds, etc) although you are welcome to make a comment if you notice any such issues.
