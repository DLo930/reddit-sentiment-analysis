#use <conio>
#use <util>

int main() {
  assert(reverse_hex(0x195D3B7F) == 0xF7B3D591);
  assert(reverse_hex(0xC0CAFE)   == 0xEFAC0C00);
  assert(reverse_hex(16)         == 0x01000000);
  assert(reverse_hex(int_min())  == 8);
  
  assert(reverse_hex(0x00000000) == 0x00000000);
  assert(reverse_hex(0x00000001) == 0x10000000);
  assert(reverse_hex(0x00000012) == 0x21000000);
  assert(reverse_hex(0x00000123) == 0x32100000);
  assert(reverse_hex(0x00001234) == 0x43210000);
  assert(reverse_hex(0x00012345) == 0x54321000);
  assert(reverse_hex(0x00123456) == 0x65432100);
  assert(reverse_hex(0x01234567) == 0x76543210);
  assert(reverse_hex(0x12345678) == 0x87654321);
  assert(reverse_hex(0x12345670) == 0x07654321);
  assert(reverse_hex(0x12345600) == 0x00654321);
  assert(reverse_hex(0x12345000) == 0x00054321);
  assert(reverse_hex(0x12340000) == 0x00004321);
  assert(reverse_hex(0x12300000) == 0x00000321);
  assert(reverse_hex(0x12000000) == 0x00000021);
  assert(reverse_hex(0x10000000) == 0x00000001);

  assert(reverse_hex(0x11111111) == 0x11111111);
  assert(reverse_hex(0x77777777) == 0x77777777);
  assert(reverse_hex(0x88888888) == 0x88888888);
  assert(reverse_hex(0x99999999) == 0x99999999);
  assert(reverse_hex(0xAAAAAAAA) == 0xAAAAAAAA);
  assert(reverse_hex(0xCCCCCCCC) == 0xCCCCCCCC);
  assert(reverse_hex(0xEEEEEEEE) == 0xEEEEEEEE);
  assert(reverse_hex(0xFFFFFFFF) == 0xFFFFFFFF);

  assert(reverse_hex(0x08888888) == 0x88888880);
  assert(reverse_hex(0x80888888) == 0x88888808);
  assert(reverse_hex(0x88088888) == 0x88888088);
  assert(reverse_hex(0x88808888) == 0x88880888);
  assert(reverse_hex(0x88880888) == 0x88808888);
  assert(reverse_hex(0x88888088) == 0x88088888);
  assert(reverse_hex(0x88888808) == 0x80888888);
  assert(reverse_hex(0x88888880) == 0x08888888);

  println("All tests passed!");
  return 0;
}